function decimalAdjust(a,b,c){return"undefined"==typeof c||0===+c?Math[a](b):(b=+b,c=+c,isNaN(b)||"number"!=typeof c||c%1!==0?NaN:(b=b.toString().split("e"),b=Math[a](+(b[0]+"e"+(b[1]?+b[1]-c:-c))),b=b.toString().split("e"),+(b[0]+"e"+(b[1]?+b[1]+c:c))))}function hexToRgbA(a,b){var c=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a),d="rgba(";return d+=parseInt(c[1],16)+",",d+=parseInt(c[2],16)+",",d+=parseInt(c[3],16)+",",d+=b+")"}function refreshRNG(a){function b(a){var b=a;CPXC=new Chance(b),CPX.chanceMixin()}function c(){var a=Math.random();CPXC=new Chance(a),CPX.chanceMixin()}a="undefined"==typeof a?function(){}:a,$.ajax({url:"https://www.random.org/integers/",data:{num:"1",col:"1",min:"1",max:"1000000000",base:"10",format:"plain",rnd:"new"},success:b,error:c,complete:a,timeout:3e3})}function start(a){refreshRNG(a)}function mapLocation(a){var b=a.hex,c=a.map._hexradius,d=a.map._pointy,e=-90;a.map._pointy||(e=0);var f=CPX.hex.center(c,b,d),g=a.map.bounds;return f.x+=g.x/2,f.y+=g.y/2,objExists(a.viewcenter)&&(f.x-=a.viewcenter.x,f.y-=a.viewcenter.y),f}function makeHex(a){var b=(a.size,a.stroke),c=a.fill,d=mapLocation(a),e=-90;a.map.class.includes("pointy")||(e=0);var f=new createjs.Graphics;return f.setStrokeStyle(1).beginStroke(b),a.map.class.includes("gradient")||a.map.selected.includes(a.hex.id)?(f.beginRadialGradientFill(["white",c],[.3,.9],d.x,d.y,0,d.x,d.y,a.map._hexradius),objExists(a.unit)&&f.beginFill(c)):f.beginFill(c),f.drawPolyStar(d.x,d.y,a.map._hexradius,6,0,e),f}function makeShape(a){var b=a.size,c=a.stroke,d=a.fill,e=mapLocation(a),f=new createjs.Graphics;return f.setStrokeStyle(1).beginStroke(c).beginFill(d),"circle"==a.shape?f.drawCircle(e.x,e.y,b):"square"==a.shape?f.drawRect(e.x-b/2,e.y-b/2,b,b):"triangle"==a.token.shape&&f.drawPolyStar(e.x,e.y,b,3,0,0),f}function initialize(){vMainMenu.open()}const CPX={display:{},gen:{},user:{},vue:{},realm:{},data:{}},CPXSAVE=localforage.createInstance({name:"CPXSave",storeName:"CPXsave"}),CPXDB={};var CPXC;DATA=CPX.data;const base62="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",RANKS=["common","uncommon","rare","legendary","epic"],DIERANKS=[["1d4"],["1d6"],["1d8"],["1d10"],["1d12"],["1d6","1d8"],["1d8","1d8"],["1d8","1d10"],["1d10","1d10"],["1d6","1d8","1d8"],["1d8","1d8","1d8"],["1d10","1d8","1d8"],["1d10","1d10","1d8"],["1d10","1d10","1d10"]];Math.round10=function(a,b){return decimalAdjust("round",a,b)},Math.floor10=function(a,b){return decimalAdjust("floor",a,b)},Math.ceil10=function(a,b){return decimalAdjust("ceil",a,b)},objExists=function(a){return"undefined"!=typeof a},objCopy=function(a){return JSON.parse(JSON.stringify(a))},Array.prototype.unique=function(){for(var a=this.concat(),b=0;b<a.length;++b)for(var c=b+1;c<a.length;++c)a[b]===a[c]&&a.splice(c--,1);return a},Array.prototype.findOne=function(a){return this.some(function(b){return a.indexOf(b)>=0})},CPX.obj=function(a,b){var c={class:[],seed:"undefined"==typeof a.seed?[CPXC.string({length:32,pool:base62})]:a.seed,scale:"undefined"==typeof a.scale?3:a.scale,parent:"undefined"==typeof a.parent?{}:a.parent};c._id=c.seed.join(""),b="undefined"==typeof b?{}:b;for(var d in b)c[d]="undefined"==typeof a[d]?b[d]:a[d];return c},CPX.obj.applyTemplate=function(a,b){if(objExists(b.template))for(var c in b.template)a[c]=b.template[c]},CPX.size=function(a){var b=a.weighted([1,2,3,4,5],[.1,.45,.34,.1,.01]),c=a.normal({mean:0,dev:.3});return b+=1==b?Math.abs(c):c},CPX.chanceMixin=function(){CPXC.mixin({dF:function(){return CPXC.rpg("4d3",{sum:!0})-8},DW:function(){return CPXC.rpg("2d6",{sum:!0})},diceSum:function(a){return CPXC.rpg(a,{sum:!0})},diceEx:function(a){for(var b=0,c=0,d=0,e=a.length,f=0;f<e;f++)d=Number(a[f][a[f].length-1]),c=CPXC.diceSum(a[f]),b+=c,c==d&&(a.push(a[f]),e++);return b}})},setInterval(function(){refreshRNG()},6e5);var HUB=new Vue;const axialDirections=[[1,-1],[1,0],[0,1],[-1,1],[-1,0],[0,-1]];var Zone=function(a,b){this.id=b,this.cells=[],this.color=a.RNG.color({format:"hex"}),this.visible=!1,this.special=[],this.class=["zone"],this.parent=[a]},HCell=function(a,b,c,d){this.id=a+"_"+b,this.q=a,this.r=b,this.terrain=c,this.climate=-1,this.zone=-1,this.special=[],this.doom=0,objExists(d)&&(this.zone=d.id)};CPX.hex={},CPX.hex.center=function(a,b,c){return c="undefined"==typeof c||c,x=a*Math.sqrt(3)*(b.q+b.r/2),y=3*a/2*b.r,c||(x=3*a/2*b.q,y=a*Math.sqrt(3)*(b.r+b.q/2)),{x:x,y:y}},CPX.hex.mapBounds=function(a){var b=CPX.hex.center(a._hexradius,{q:a.r,r:a.q},a._pointy),c=CPX.hex.center(a._hexradius,{q:a.r+a.dw,r:a.q+a.dh},a._pointy),d={x:c.x-b.x+2*a._hexradius,y:c.y-b.y+2*a._hexradius};return d},CPX.hex.axialD=function(a,b){return(Math.abs(a.q-b.q)+Math.abs(a.q+a.r-b.q-b.r)+Math.abs(a.r-b.r))/2},CPX.hex.neighboorIDs=function(a){for(var b=[],c=0,d=0,e=0;e<axialDirections.length;e++)c=a.q+axialDirections[e][0],d=a.r+axialDirections[e][1],b.push(c+"_"+d);return b},CPX.hex.withinX=function(a,b){var c=[],d=[],e="",f=0,g=0,h={};c.push(a.id),d[0]=[a];for(var i=1;i<=b;i++){d[i]=[];for(var j=0;j<d[i-1].length;j++){h=d[i-1][j];for(var k=0;k<axialDirections.length;k++)f=h.q+axialDirections[k][0],g=h.r+axialDirections[k][1],e=f+"_"+g,c.includes(e)||(c.push(e),d[i].push({id:e,q:f,r:g}))}}return d.all=c,d},CPX.hex.cellQR=function(a){var b=a.indexOf("_"),c=Number(a.substr(0,b)),d=Number(a.substr(b+1));return{q:c,r:d}},CPX.hex.pop=function(a,b,c){var d=b.special.length,e=c,f={type:"pop",seed:a.seed.concat([b.id,"p"+d]),terrain:b.terrain,visible:!1};"atlas"==a._type&&(e=a.RNG.weighted([c-1,c,c+1],[.25,.6,.15])),f.scale=e,CPX.basicVisibility(a,e)&&(f.visible=!0),"hexPlane"==a._type&&(f.template={people:CPX.people({seed:f.seed.concat(["pop"]),terrain:b.terrain})}),b.special.push(f)},CPX.hex.hideout=function(a,b,c){var d=b.special.length,e={type:"pop",subtype:"hideout",seed:a.seed.concat([b.id,"h"+d]),terrain:b.terrain,scale:c[0],level:c[1],visible:!1};b.special.push(e)},CPX.hex.order=function(a,b,c){var d=b.special.length,e=c[0];"atlas"==a._type&&(e=a.RNG.weighted([c[0]-1,c[0],c[0]+1],[.25,.6,.15]));var f={type:"pop",subtype:"order",seed:a.seed.concat([b.id,"d"+d]),terrain:b.terrain,scale:e,level:c[1],visible:!1};CPX.basicVisibility(a,e)&&(f.visible=!0),b.special.push(f)},CPX.hex.lair=function(a,b,c){var d=b.special.length,e={type:"lair",seed:a.seed.concat([b.id,"l"+d]),terrain:b.terrain,scale:4,level:c,visible:!1};b.special.push(e)},CPX.hex.ruin=function(a,b,c){var d=b.special.length,e=c;e=a.RNG.weighted([c[0]-2,c[0]-1,c[0],c[0]+1,c[0]+2],[.05,.2,.5,.2,.05]);var f={type:"ruin",seed:a.seed.concat([b.id,"r"+d]),terrain:b.terrain,scale:e,level:c[1],visible:!1};CPX.basicVisibility(a,e)&&(f.visible=!0),b.special.push(f)},CPX.hex.site=function(a,b,c){var d=b.special.length,e=c[0];"hexPlane"==a._type?e=a.RNG.weighted([c[0]-1,c[0],c[0]+1],[.2,.6,.2]):"atlas"==a._type&&(e=a.RNG.weighted([c[0]-2,c[0]-1,c[0],c[0]+1],[.1,.45,.4,.05]));var f=b.terrain;a.RNG.bool()&&(f=a.RNG.pickone(TERRAINS));var g={type:"site",seed:a.seed.concat([b.id,"s"+d]),terrain:f,level:c[1],scale:e,visible:!1};CPX.basicVisibility(a,e)&&(g.visible=!0),b.special.push(g)},CPX.cellArray=function(a){var b=[];for(var c in a.cells)b.push(c);return b};const TERRAINS=["water","swamp","desert","plain","forest","hill","mountain"],terrainColors=["aqua","CadetBlue","Beige","LightGreen","ForestGreen","Brown","DarkGrey"],CLIMATES=["arctic","sub-arctic","temperate","sub-tropical","tropical"];CPX.display.makeGraphics=function(a){var b=new createjs.Shape;b.data=a.data.data,b.graphics=a.dtype(a.data),a.container.addChild(b),b.addEventListener("click",a.onClick)},CPX.display.centerAdjust=function(a){a.display.stage.children.forEach(function(b){b.x-=a.center.x,b.y-=a.center.y}),a.display.stage.update()},Vue.component("c-menubar",{props:["id","show"],template:'<div class="btn-group btn-group-justified top-header" role="group"><div class="btn-group" role="group" v-if="show.new"><button @click="new" type="button" class="btn btn-info">New</button></div><div class="btn-group" role="group" v-if="show.load"><button @click="load" type="button" class="btn btn-info">Load</button></div><div class="btn-group" role="group" v-if="show.save"><button @click="save" type="button" class="btn btn-info">Save</button></div><div class="btn-group" role="group" v-if="show.close"><button @click="close" type="button" class="btn btn-info">Close</button></div></div>',methods:{new:function(){HUB.$emit(this.id+"-new","")},close:function(){HUB.$emit(this.id+"-close","")},save:function(){HUB.$emit(this.id+"-save","")},load:function(){HUB.$emit(this.id+"-showload","")}}}),Vue.component("c-loadselect",{props:["id","list","show"],template:'  <div class="center content" v-show="show"><select v-model="loadID">  <option class="center" v-for="(key,val) in list" v-bind:value="key">{{val}}</option> </select>  <button v-on:click="load" type="button" class="btn btn-info">Load</button></div>  ',data:function(){return{loadID:""}},methods:{load:function(){var a=this;CPXSAVE.getItem(this.loadID).then(function(b){HUB.$emit(a.id+"-loadObj",b)})}}});var vMainMenu=new Vue({el:"#mainmenu",data:{show:!1},methods:{open:function(){this.show=!0},About:function(){this.show=!1,CPX.vue.page.open("c-txt","wide")},hexArea:function(){this.show=!1,CPX.vue.page.open("c-cha","")},cityGen:function(){this.show=!1,CPX.vue.page.open("c-cfp","slim")},areaBuilder:function(){this.show=!1,CPX.vue.page.open("c-cab","slim")},CephGen:function(a){this.show=!1,CPX.vue.page.open("c-chs","slim")},PWDGen:function(){this.show=!1,CPX.vue.page.open("c-pwd","slim")},PandCGen:function(){this.show=!1,CPX.vue.page.open("c-pnc","slim")},fpGen:function(a){this.show=!1,CPX.vue.page.open("c-fpg","slim")},clearAllData:function(){var a="Clear All Saved Data",b='<div class="center">This will clear all saved data (heroes, generated content, etc.) - everything. </br>Are you sure?</div>';CPX.vue.notify.open(a,b,!1,"c-deleteall"),CPX.vue.notify.deleteall=!0},close:function(a){this.show=!1}}});CPX.data.DWSteadings={basic:["village","town","keep","city"],bp:[5,3,3,1],village:{core:["Poor","Steady","Militia","Resource (type)","Oath (steading)"],extra:[[0,"Natural defenses",["Safe","-Defenses"]],[1,"Abundant resources",["+Prosperity","Resource (type)","Enmity (steading)"]],[2,"Protected by another steading",["Oath (steading)","+Defenses"]],[3,"On a major road",["Trade (steading)","+Prosperity"]],[4,"Built around a wizard’s tower",["Personage (wizard)","Blight (arcane creatures)"]],[5,"Built on a site of religious significance",["Divine","History"]]],ep:[3,3,2,2,1,1],trouble:[[0,"Surrounded by arid or uncultivable land",["Need (food)"]],[1,"Dedicated to a deity",["Religious (that deity)","Enmity (steading of opposing deity)"]],[2,"Recently at war",["-Population","-Prosperityif they fought to the end","-Defenses if they lost"]],[3,"Monster problem",["Blight (that monster)","Need (adventurers)"]],[4,"Absorbed another village",["+Population","Lawless"]],[5,"Remote or unwelcoming",["-Prosperity","Dwarven or Elven or other non-human"]]]},town:{core:["Moderate","Steady","Watch","Trade (steading)","Trade (steading)"],extra:[[0,"Booming",["Booming","Lawless"]],[1,"At a crossroads",["Market","+Prosperity"]],[2,"Defended by another steading",["Oath (steading)","+Defenses"]],[3,"Built around a church",["Power (divine)"]],[4,"Built around a craft",["Craft (type)","Resource (something required for that craft)"]],[5,"Built around a military post",["+Defenses"]]],ep:[1,2,2,2,3,2],trouble:[[0,"Outgrowing a vital resource",["Need (type)","Trade (steading with need)"]],[1,"Offers defense to others",["Oath (steading)","-Defenses"]],[2,"Outlaw rumored to live there",["Personage (outlaw)","Enmity (steading preyed upon)"]],[3,"Controls a good/service",["Exotic (good/service)","Enmity (steading)"]],[4,"Suffers from disease",["-Population"]],[5,"Popular meeting place",["+Population","Lawless"]]]},keep:{core:["Poor","Shrinking","Guard","Need (supplies)","Trade (steading)","Oath (steading)"],extra:[[0,"Belongs to a noble family",["+Prosperity","Power (political)"]],[1,"Run by a skilled commander",["Personage (commander)","+Defenses"]],[2,"Stands watch over a trade road",["+Prosperity","Guild (trade)"]],[3,"Used to train special troops",["Arcane","-Population"]],[4,"Surrounded by fertile land",["-Need (Supplies)"]],[5,"Stands on a border",["+Defenses","Enmity (steading)"]]],ep:[2,2,2,2,2,2],trouble:[[0,"Built on a naturally defensible position",["Safe","-Population"]],[1,"Formerly occupied by another power",["Enmity (steading)"]],[2,"Safe haven for brigands",["Lawless"]],[3,"Built to defend from a specific threat",["Blight (threat)"]],[4,"Has seen horrible bloody war",["History (battle)","Blight (restless spirits)"]],[5,"Is given the worst of the worst",["Need (skilled recruits)"]],[6,"Suffers from disease","-Population"],[7,"Popular meeting place",["+Population","-Law"]]]},city:{core:["Moderate","Steady","Guard","Market","Guild (type)","Oath (steading)","Oath (steading)"],extra:[[0,"Permanent defenses, such as walls",["+Defenses","Oath (steading)"]],[1,"Ruled by a single individual",["Personage (ruler)","Power (political)"]],[2,"Diverse",["Dwarven or Elven or both"]],[3,"Trade hub",["Trade (every nearby steading)","+Prosperity"]],[4,"Ancient, built on top of its own ruins",["History (your choice)","Divine"]],[5,"Center of learning",["Arcane","Craft (your choice)","Power (arcane)"]]],ep:[3,3,1,3,1,1],trouble:[[0,"Outgrown its resources",["+Population","Need (food)"]],[1,"Designs on nearby territory",["Enmity (nearby steadings)","+Defenses"]],[2,"Ruled by a theocracy",["-Defenses","Power (divine)"]],[3,"Ruled by the people",["-Defenses","+Population"]],[4,"Supernatural defenses",["+Defenses","Blight (related supernatural creatures)"]],[5,"Occupies a place of power",["Arcane","Personage (whoever watches the place of power)","Blight (arcane creatures)"]]]}},CPX.DWSteading=function(a){var b={seed:a.seed,class:["steading",a.type],name:"undefined"==typeof a.name?"":a.name,notes:"undefined"==typeof a.notes?"":a.notes,people:"undefined"==typeof a.people?[]:a.people,terrain:"undefined"==typeof a.people?3:a.terrain};b._id=b.seed.join(""),b.RNG=new Chance(b._id);var c=CPX.data.DWSteadings[a.type];if(b.extra=b.RNG.weighted(c.extra,c.ep)[0],b.trouble=b.RNG.pickone(c.trouble)[0],b.tags=c.core.concat([]).join(", "),0==b.people.length)for(var d=b.RNG.weighted([1,2,3],[7,2.5,.5]),e=0;e<d;e++)b.people.push(CPX.people(b.RNG,{terrain:a.terrain}));return b.RNG=null,delete b.RNG,b},Vue.component("c-cfp-DWS",{props:["obj"],template:'<div class="content"><input class="form-control input-lg center" type="text" v-model="obj.name" placeholder="NAME"><textarea class="form-control" type="textarea" v-model="obj.notes" placeholder="ADD NOTES"></textarea><div class="input-group"><span class="input-group-addon strong">Tags</span><textarea class="center form-control" type="textarea" lines="3" v-model="obj.tags"></textarea></div><div class="content-minor box"><div class="header strong center">Population</div><c-cfp-ppl v-for="ppl in obj.people" v-bind:P="ppl"></c-cfp-ppl></div><div class="input-group"><span class="input-group-addon strong">Extra</span><select class="form-control" v-model="obj.extra"><option  v-for="e in extras" v-bind:value="$index">{{e[1]}}</option></select></div><div class="center bottom-pad">{{extras[obj.extra][2].join(`, `)}}</div><div class="input-group"><span class="input-group-addon strong">Trouble</span><select class="form-control" v-model="obj.trouble"><option  v-for="t in trouble" v-bind:value="$index">{{t[1]}}</option></select></div><div class="center bottom-pad">{{trouble[obj.trouble][2].join(`, `)}}</div></div>',data:function(){return{extras:CPX.data.DWSteadings[this.obj.class[1]].extra,trouble:CPX.data.DWSteadings[this.obj.class[1]].trouble}}});var CREATURES={creature:[["beast","monster"],[1,1]],beast:[["land","air","water"],[7/12,.25,2/12]],land:["termite","tick","snail","slug","worm","ant","centipede","scorpion","snake","lizard","rat","weasel","boar","dog","fox","wolf","cat","lion","panther","deer","horse","ox","rhino","bear","gorilla","ape","mammoth","dinosaur"],air:["mosquito","firefly","locust","dragonfly","moth","bee","wasp","chicken","duck","goose","jay","parrot","gull","pelican","crane","raven","falcon","eagle","owl","condor","pteranodon"],water:["jellyfish","clam","eel","frog","fish","crab","lobster","turtle","alligator","shark","squid","octopus","whale"],unnatural:[["undead","planar","divine"],[8/12,.25,1/12]],undead:[["haunt","wisp","ghost","banshee","wraith","wight","spirit lord","skeleton"],[1,1,1,1,1,1,1,1]],planar:[["imp","lesser elemental","lesser horror","greater elemental","greater horror","elemental lord"],[.25,.25,.25,1/12,1/12,1/12]],divine:[["agent","champion","army","avatar"],[5/12,4/12,2/12,1/12]],monster:[["uncommon","rare","legendary"],[7/12,.25,2/12]],uncommon:[["plant","fungus",["*beast","*undead"],["*beast","*beast"],["*beast","+ability"],["*beast","+feature"]],[1,1,1,1,1,1]],rare:[["slime",["*beast","+construct"],["*beast","+element"],["*beast","*unnatural"]],[1,1,1,1]],legendary:[[["*dragon"],"colossus",["#uncommon","+huge"],["#rare","+huge"],["*beast","*dragon"],["#uncommon","*dragon"],["#rare","*dragon"]],[1/8,1/8,.25,.25,1/12,1/12,1/12]]},SPECIALNATURE={nature:["brute","blaster","skirmisher","soldier","stalker","controller"],ability:["bless","curse","entangle","poison","disease","paralyze","petrify","mimic","camouflage","hypnotize","dissolve","disintegrate","ignores armor","ranged","flying","armored","slicing","great strength","master combatant","deft","drain life","drain magic","immunity","control minds","piercing","*magic","rolltwice"],aspect:["strength","trickery","dexterity","time","constitution","knowledge","intelligence","nature","wisdom","culture","charisma","war","lies","discord","peace","truth","balance","hate","envy","love","admiration","*element","rolltwice"],element:["air","earth","fire","water","life","death"],feature:["vicious","multiple heads","headless","many eyes","one eye","many limbs","tail","tentacles","*aspect","*element","*magic","*oddity","rolltwice"],magic:["divination","enchantment","evocation","illusion","necromancy","summoning"],nappearing:["solitary","group","horde"],size:["tiny","small","standard","large","huge"],tag:["amorphous","construct","devious","intelligent","magical","organized","planar","stealthy","terrifying","rolltwice"],oddity:["particle swarm","geometric","chaotic","crystalline","fungal","gaseous","smoke","illusionary"]},COLORDESCRIPTORS=["Inferno","Flame","Blaze","Pyre","Desert","War","Strife","Ravage","Crimson","Scarlet","Ruby","Dire","Thorny","Proto","Storm","Lightning","Wind","Gale","Emerald","Moss","Malachite","Veridian","Azure","Cobalt","Sapphire","Devious","Night","Shadow","Fear","Ice","Snow","Blizzard","Stone","Cunning","Crystal","Rock","Crag","Doom","Death","Ruin","Null","Amber","Gold","Citrine","Aurulent","Iron","Law","Protection","Void","Righteousness","Strong","Pale","Ashen","Ghost","Silver","Alabaster","Ivory","Ghastly","Hoary","Pallid"],MINIONS={brute:{skills:{Physique:0,Fight:-1},class:["foe"]},blaster:{skills:{Shoot:0,Athletics:-1},class:["foe"]},skirmisher:{skills:{Athletics:0,Fight:-1},class:["foe"]},soldier:{skills:{Fight:0,Physique:-1},class:["foe"]},stalker:{skills:{Athletics:0,Fight:-1},class:["foe"]},controller:{skills:{Will:0},class:["foe"]},Laborer:{id:"Laborer",cost:1,skills:{Craft:1},special:[],class:["basic","general"],inventory:["tools","Club"]},Soldier:{id:"Soldier",cost:1,skills:{Fight:1,Might:0,Fortitude:0},special:[],class:["basic","general","combatant"],inventory:["Longsword","Leather Armor"]},Scout:{id:"Scout",cost:1,skills:{Notice:1,Fight:-1},special:[],class:["basic","general"],inventory:["Dagger","Leather Armor"]},Diplomat:{id:"Diplomat",cost:1,skills:{Rapport:1,Investigate:0,Will:0},special:[],class:["basic","special"],inventory:["Staff"]}};CPX.encounter=function(a,b){var b="undefined"==typeof b?{}:b,c="undefined"==typeof b.terrain?-1:b.terrain,d=a.weighted(["common","uncommon","rare","legendary"],[10,4,.8,.2]);objExists(b.rank)&&(d=b.rank),c==-1&&(c=a.natural({min:0,max:6}));var e=a.pickone(["beast","people","monster"]),f={};return f="beast"==e?CPX.creature.beastEnhanced(a,c,d):"people"==e?CPX.people(a,{terrain:c,rank:d}):CPX.creature(a,{terrain:c,rank:d})},CPX.creature=function(a,b){var b="undefined"==typeof b?{}:b,c="undefined"==typeof b.terrain?-1:b.terrain,d=a.weighted(["common","uncommon","rare","legendary"],[10,4,.8,.2]);objExists(b.rank)&&(d=b.rank),c==-1&&(c=a.natural({min:0,max:6}));var e={};return"common"==d?e=CPX.creature.beast(a,c,d):"uncommon"==d?e=CPX.creature.monster(a,c,"uncommon"):"rare"==d?e=CPX.creature.monster(a,c,"rare"):"legendary"==d&&(e=CPX.creature.monster(a,c,"legendary")),e},CPX.creature.standard=function(a,b){if(b.text=a.pickone(COLORDESCRIPTORS),b.name=b.text+" ",b.name+=b.creature.join(" "),b.scale=0,b.special.includes("tiny"))b.scale--;else if(b.special.includes("huge"))b.scale++;else{var c=a.weighted(SPECIALNATURE.size,[1,2,6,2,1]);"tiny"==c?b.scale--:"huge"==c&&b.scale++,"standard"!=c&&b.special.push(c)}b.name.includes("colossus")&&(b.scale+=2,b.special.push("colossal")),b.nappearing=a.weighted(SPECIALNATURE.nappearing,[.3,.5,.2]),b.nature=a.pickone(SPECIALNATURE.nature),b.class=b.class.unique(),b.special=b.special.unique()},CPX.creature.constructor=function(a,b,c,d,e){function f(c){var f={};f=CPX.creature.constructor(a,b,c,d,e),g[a]=g[a].concat(f[a]),g.special=g.special.concat(f.special),g.class=g.class.concat(f.class)}var g={special:[],class:[]},h={},i="",j="";return g[a]=[],"creature"==a?h=CREATURES:"people"==a&&(h=PEOPLES),objExists(h[c])?(j=b.pickone(h[c]),f(j)):"#"==c[0]?(i=c.slice(1),j=b.weighted(h[i][0],h[i][1]),Array.isArray(j)?j.forEach(function(a){f(a)}):g=CPX.creature.constructor(a,b,j,d,e)):"*"==c[0]?(i=c.slice(1),g=CPX[a][i](b,d,e)):"+"==c[0]?(i=c.slice(1),objExists(SPECIALNATURE[i])?g.special=CPX.creature.special(b,i):g.special.push(i)):g[a].push(c),g},CPX.creature.special=function(a,b){function c(b){return a.pickone(b)}var d=[];if(d.push(c(SPECIALNATURE[b])),d.includes("rolltwice")){var e=SPECIALNATURE[b].slice(0,-1);d.length=0,d.push(c(e)),d.push(c(e))}return d.forEach(function(a,e){var f=["aspect","element","magic"];if("*"==a[0]){var g=a.slice(1);d[e]=c(SPECIALNATURE[g]),f.includes(g)&&(d[e]=CPXC.capitalize(g)+" ("+d[e]+")")}else f.includes(b)&&(d[e]=CPXC.capitalize(b)+" ("+a+")")}),d},CPX.creature.beastEnhanced=function(a,b,c){for(var d=CPX.creature.beast(a,b,c),e=[],f={common:0,uncommon:1,rare:3,legendary:6},g=["element","feature","tag","ability"],h=0;h<f[c];h++)e=e.concat(CPX.creature.special(a,a.pickone(g)));return d.special=e,d},CPX.creature.beast=function(a,b,c){var d=CREATURES.beast[1];0==b&&(d=[.25,1/12,7/12]);var e=a.weighted(CREATURES.beast[0],d),f=a.pickone(CREATURES[e]),g={creature:[f],class:["creature","beast"],rank:c,special:[]};return CPX.creature.standard(a,g),g},CPX.creature.monster=function(a,b,c){objExists(c)||(c=a.weighted(CREATURES.monster[0],CREATURES.monster[1])),mb=a.weighted(CREATURES[c][0],CREATURES[c][1]);var d={creature:[],class:["creature","monster"],special:[]},e={};return Array.isArray(mb)?mb.forEach(function(f){e=CPX.creature.constructor("creature",a,f,b,c),d.creature=d.creature.concat(e.creature),d.special=d.special.concat(e.special),d.class=d.class.concat(e.class)}):d=CPX.creature.constructor("creature",a,mb,b,c),d.rank=c,CPX.creature.standard(a,d),d},CPX.creature.dragon=function(a,b,c){var d=CPX.creature.special(a,"ability");d=d.concat(CPX.creature.special(a,"element"),CPX.creature.special(a,"feature"),CPX.creature.special(a,"tag"));var e={creature:["dragon"],class:["dragon"],special:d};return e},CPX.creature.unnatural=function(a,b,c){var d=a.weighted(CREATURES.unnatural[0],CREATURES.unnatural[1]);return CPX.creature[d](a)},CPX.creature.undead=function(a,b,c){var d=a.weighted(CREATURES.undead[0],CREATURES.undead[1]),e=CPX.creature.special(a,"ability");e.push("undead");var f={creature:[d],class:["undead"],special:e};return f},CPX.creature.planar=function(a,b,c){var d=a.weighted(CREATURES.planar[0],CREATURES.planar[1]),e=CPX.creature.special(a,"ability");e=e.concat(CPX.creature.special(a,"element"),CPX.creature.special(a,"feature"),CPX.creature.special(a,"tag"));var f={creature:[d],class:["planar"],special:e};return f},CPX.creature.divine=function(a,b,c){var d=a.weighted(CREATURES.divine[0],CREATURES.divine[1]),e=CPX.creature.special(a,"aspect");e=e.concat(CPX.creature.special(a,"ability"),CPX.creature.special(a,"element"),CPX.creature.special(a,"feature"),CPX.creature.special(a,"tag"));var f={creature:[d],class:["divine"],special:e};return f};var PEOPLES={human:["Human"],demi:["Elf","Dwarf"],smallfolk:["Gnome","Halfling","Kobold"],monstrous:["Nightelf","Orc","Goblin","Hobgoblin","Ogre","Troll","Gnoll","Minotaur","Lizard-people","Snake-people","Dog-people","Cat-people","Mantis-people","Naga"],hybrid:["Ape","Badger","Bat","Bear","Beetle","Boar","Cat","Cetnipede","Deer","Dog","Eagle","Elephant","Frog","Goat","Horse","Lion","Mantis","Owl","Panther","Rat","Raven","Rhinoceros","Scorpion","Snake","Spider","Tiger","Vulture","Wasp","Weasel","Wolf","Crab","Crocodile","Octopus","Shark","Eel"],uncommonraces:["Plant-people","Fungus-people"],rareraces:["*elemental","*giant"],common:[["human","demi","smallfolk","monstrous"],[.5,.25,.1,.15]],uncommon:[["uncommonraces","hybrid",["#common","+element"]],[1,2,2]],rare:[["rareraces",["#common","+construct"],["hybrid","uncommonraces"],["hybrid","hybrid"],["hybrid","+element"],["#common","+ability","+element","+aspect"]],[1,1,1,1,1,1]],legendary:[["*dragon",["#rare","+element","+ability","+aspect"]],[1,2]]};CPX.professions=function(a,b){b="undefined"==typeof b?[]:b;var c=["Mystic Knights","Knights","Wizards","Priests","Monks"];return a.pickone(c.concat(b))},CPX.people=function(a,b){var b="undefined"==typeof b?{}:b,c="undefined"==typeof b.terrain?-1:b.terrain,d=a.weighted(["common","uncommon","rare","legendary"],[10,4,.8,.2]);objExists(b.rank)&&(d=b.rank),c==-1&&(c=a.natural({min:0,max:6}));var e=a.weighted(PEOPLES[d][0],PEOPLES[d][1]),f={people:[],special:[]},g={};if(Array.isArray(e)?e.forEach(function(b){g=CPX.creature.constructor("people",a,b,c,d),f.people=f.people.concat(g.people),f.special=f.special.concat(g.special)}):f=CPX.creature.constructor("people",a,e,c,d),f.text=a.pickone(COLORDESCRIPTORS),e.includes("hybrid")?f.name=CPXC.capitalize(f.people.join("-"))+" people":f.name=CPXC.capitalize(f.people.join(" ")),f.class=["people"],f.scale=0,f.special.includes("tiny"))f.scale--;else if(f.special.includes("huge"))f.scale++;else{var h=a.weighted(SPECIALNATURE.size,[1,2,6,2,1]);"tiny"==h?f.scale--:"huge"==h&&f.scale++,"standard"!=h&&f.special.push(h)}return f.rank=d,f.nappearing=a.weighted(SPECIALNATURE.nappearing,[.3,.5,.2]),f.nature=a.pickone(SPECIALNATURE.nature),f.class=f.class.unique(),f.special=f.special.unique(),f.tags=f.special.join(", "),f},CPX.people.elemental=function(a){var b=CPX.creature.special(a,"element");return b=b.concat(CPX.creature.special(a,"ability"),CPX.creature.special(a,"tag")),{people:["elemental"],special:b}},CPX.people.giant=function(a){var b=CPX.creature.special(a,"element");return b.push("huge"),{people:["giant"],special:b}},CPX.people.dragon=function(a,b,c){var d=CPX.creature.special(a,"ability");return d=d.concat(CPX.creature.special(a,"element"),CPX.creature.special(a,"feature"),CPX.creature.special(a,"tag")),{people:["dragon"],special:d}},CPX.CFP={densities:["dense","scattered","frontier","unsettled","desolate"],citysizes:["single dwelling","thorp","hamlet","village","town, small","town, large","city, small","city, large","metropolis, small","metropolis, large"],habitation:["uninhabited","single dwelling","thorp","hamlet","village","town, small","town, large","city, small","city, large","stronghold","temple","ruin","special"],special:{water:"achored boat",swamp:"unihabited",desert:"nomad camp",plain:"nomad camp",forest:"logging camp",hill:"military outpost",mountain:"mine"},dense:{items:[1,2,3,4,5,6,7,8,9,10,11,12],p:[4,3,3,2,2,1,1,3,3,3,2,1],special:{items:["manor","peasant long house","orphanage","traders’ village","mill","military barracks","church","chapterhouse","bath house","alehouse/tavern/inn"],p:[4,3,3,3,2,3,3,3,3,2]}},scattered:{items:[0,1,2,3,4,5,6,7,9,10,11,12],p:[5,7,3,3,2,2,1,1,2,2,1,1],special:{items:["manor","farmstead","farmstead","migrant camp","mill","military structure","abbey","priory","nunnery","bath house","inn"],p:[4,3,3,3,2,1,1,1,2,9]}},frontier:{items:[0,1,2,3,4,5,6,9,10,11,12],p:[10,3,3,2,2,2,1,1,1,4,1],special:{items:["manor","trading outpost","military outpost","military camp","work camp","abbey","priory","nunnery","hermitage","nomad camp"],p:[3,8,5,2,2,1,1,1,3,4]}},unsettled:{items:[0,1,2,3,4,5,11,12],p:[13,6,2,2,2,1,3,1],special:{items:["hermit","trading outpost","military outpost","military camp","work camp","prison","hermitage","nomad camp","monastery","re-roll on “Desolate”"],p:[1,5,6,3,2,2,3,3,4,1]}},desolate:{items:[0,1,2,3,11],p:[23,2,1,1,3],special:{items:["abandoned/forgotten tower","abandoned/forgotten castle/fortress","abandoned/forgotten temple","abandoned/forgotten town","abandoned/forgotten city","sunken city (partially submerged in ground)","lost city (below ground)","shrine (1-2 on 1d3 = inactive)","hermit","monastery"],p:[6,5,2,1,2,1,1,3,7,1]}},govt:[["anarchy","lawless society"],["argentocracy","money - all decisions made by financial prudence"],["aristarchy","the best - through contest"],["aristocracy","nobility"],["autocracy","individual with absolute power (e.g., emperor/dictator)"],["cryptarchy","secret rulership"],["democracy","the people"],["demonocracy","demons (or representatives of demons)"],["ecclesiarchy","clerics"],["ethnocracy","a particular race (among mixed races)"],["gerontocracy","eldest citizens (age-based)"],["gynocracy","women"],["heroarchy","heroes"],["heterarchy","foreign ruler"],["matriarchy","eldest females"],["militocracy","military rulers"],["monarchy","individual, usually hereditary (e.g., queen/king)"],["oligarchy","the few (usually co-equal)"],["patriarchy","eldest males"],["pedantocracy","strict rule-bound scholars"],["pedocracy","learned, savants, and scholars"],["phallocracy","government by men"],["plutocracy","the wealthy"],["prophetocracy","government by a prophet"],["quangocracy","quasi-autonomous non-governmental organizations"],["statocracy","the state alone, without ecclesiastical influence"],["thearchy","a god or gods (or through 1 or more representatives)"],["theocracy","priests or religious law"],["tritheocracy","three gods (or representatives thereof)"],["xenocracy","a body of foreigners"]],outsiders:["accepting of","aggravated by","amused by","annoyed with","anxious around","apathetic toward","bored by","curious about","cynical of","enraged by","enthralled with","envious of","excited by","frustrated with","grumpy around","impressed by","indifferent to","infuriated by","irritated by","melancholy about","peaceful around","pissed off with","predatory of","rejecting of","restless around","sympathetic toward","tired of","uncomfortable around","unimpressed by","weird around"],economy:["booming","bullish/hopeful","depressed","doomed","expanding","inflationary","overheated/growing too fast","recessionary","uncontrolled/fluctuating","weak"],taxes:["low","average","exorbitant"],issues:["beggars/vagrancy","drunkards","corruption","disease","feuding","fire","prostitution","theft (pickpockets)","unrest (general)","waste issues"],issuedegree:["minor/contained","moderate/widespread","major/pervasive"],threats:["bandits (thieves)","barbarians (horde)","beetles, giant","bugbears","chimera","clerics (evil)","dragon","elves (evil)","ettin","gargoyles","ghouls","giant(s)","gnolls","goblins","harpie(s)","hobgoblins","kobolds","lizard men","mage (hostile)","manticore","ogre(s)","ogre mage","pterodactyl","roc","skeletons","troglodytes","trolls","witch","wolves","zombies"],leader:{class:["fighter","magic-user","cleric","dwarf","elf","halfling"],
p:[8,6,10,2,2,2],levelstart:[9,11,7,9,9,9]},stype:{fighter:["castle","keep/square","keep/round","keep/shell","towers/square","towers/round","concentric"],"magic-user":["tower","round/sloped","round/straight","round/stepped","square/sloped","square/straight","square/stepped"],dwarf:["mountain stronghold","centralized/flat","spread/concave","spread/convex","modular/towered","hidden/disguised","concentric"],halfling:["shire","mounds/walled","mounds/hidden","mounds & trees/walled","mounds & trees/hidden","castle/walled","castle/hidden"]},ssize:{fighter:{levels:[["1d2",1],["1d3",2],["1d3",4],["1d5",6],["1d6",10]],rings:[["1d2",1],["1d2",2],["1d2",3],["1d2",4],["1d2",5]]},"magic-user":[["1d2",1],["1d3",2],["1d3",4],["1d5",6],["1d6",10]],elf:{trees:[["1d2",0],["1d2",1],["1d3",3],["1d5",6],["1d6",10]],levels:[1,2,3,5,6,10]},dwarf:[["1d2",0],["1d2",1],["1d3",3],["1d5",6],["1d6",10]],halfling:[["1d2",1],["1d3",2],["1d3",4],["1d5",6],["1d6",10]]},ruin:[]},CPX.CFP.stronghold=function(a){var b={seed:a.seed,class:["stronghold"],name:"undefined"==typeof a.name?"":a.name,notes:"undefined"==typeof a.notes?"":a.notes};b._id=b.seed.join(""),b.RNG=new Chance(b._id);var c=CPX.CFP.leader;lt=b.RNG.weighted(c.class,c.p),li=c.class.indexOf(lt),b.leader={class:lt},b.leader.level=c.levelstart[li]+b.RNG.rpg("1d"+c.p[li])[0],b.type=b.RNG.d6(),b.size=b.RNG.rpg("1d5")[0]-1;var d=[];return["magic-user","dwarf","halfling"].includes(lt)?(b.class.push(CPX.CFP.stype[lt][0]),d=CPX.CFP.ssize[lt][b.size],b.size=b.RNG.rpg(d[0])[0]+d[1],b.type=CPX.CFP.stype[lt][b.type]):["fighter","cleric"].includes(lt)?(b.class.push(CPX.CFP.stype.fighter[0]),d=[0,1,3,4].includes(b.type-1)?CPX.CFP.ssize.fighter.levels[b.size]:CPX.CFP.ssize.fighter.rings[b.size],b.size=b.RNG.rpg(d[0])[0]+d[1],b.type=CPX.CFP.stype.fighter[b.type]):(b.class.push("Tree Stronghold"),d=CPX.CFP.ssize.elf.trees[b.size],b.size=b.RNG.rpg(d[0])[0]+d[1],b.type>1&&(b.type=b.RNG.rpg("1d"+CPX.CFP.ssize.elf.levels[b.type-1])),b.type+=" trees"),b.RNG=null,delete b.RNG,b},CPX.CFP.city=function(a){var b=(CPX.CFP,{seed:a.seed,type:a.type,class:["city",CPX.CFP.habitation[a.type]],name:"undefined"==typeof a.name?"":a.name,notes:"undefined"==typeof a.notes?"":a.notes,people:"undefined"==typeof a.people?[]:a.people,govt:"undefined"==typeof a.govt?-1:a.govt});b._id=b.seed.join(""),b.RNG=new Chance(b._id);var c=[[50,500],[500,1e3],[500,5e3],[5e3,1e4],[5e3,5e4],[5e4,1e5],[5e4,5e5]];if(2==a.type?b.pop=10*b.RNG.rpg("1d5"):3==a.type?b.pop=30*b.RNG.rpg("1d12"):b.pop=(b.RNG.diceSum("2d6")-2)*c[a.type-4][0]+c[a.type-4][1],0==b.people.length)for(var d=b.RNG.weighted([1,2,3],[7,2.5,.5]),e=0;e<d;e++)b.people.push(CPX.people(b.RNG,{terrain:a.terrain}));return b.economy=b.RNG.pickone(CPX.CFP.economy),b.taxes=b.RNG.pickone(CPX.CFP.taxes),b.government=b.RNG.natural({min:0,max:CPX.CFP.govt.length-1}),b.outsiders=b.RNG.pickone(CPX.CFP.outsiders),b.issue=b.RNG.pickone(CPX.CFP.issues),b.idegree=b.RNG.pickone(CPX.CFP.issuedegree),b.threat=b.RNG.pickone(CPX.CFP.threats),b.RNG=null,delete b.RNG,b},Vue.component("c-cfp-ppl",{props:["P"],template:'<div class="content-minor box"><input class="center form-control strong" type="text" v-model="P.name"><div class="input-group" v-if="P.tags.length>0"><span class="input-group-addon strong">Tags</span><input class="center form-control" type="text" v-model="P.tags"></div><div>'}),Vue.component("c-cfp-30S",{props:["obj"],template:'<div class="content-minor"><input class="form-control input-lg center" type="text" v-model="obj.name" placeholder="NAME"><textarea class="form-control" type="textarea" v-model="obj.notes" placeholder="ADD NOTES"></textarea><div class="input-group"><span class="input-group-addon strong">Leader</span><input class="center form-control" type="text" v-model="obj.leader.class"><span class="input-group-addon strong">Level</span><input class="center form-control" type="number" v-model="obj.leader.level"></div><div class="input-group"><span class="input-group-addon strong">Type</span><input class="center form-control" type="text" v-model="obj.type"><span class="input-group-addon strong">Size</span><input class="center form-control" type="text" v-model="obj.size"></div></div>',data:function(){return{}}}),Vue.component("c-cfp-30C",{props:["obj"],template:'<div class="content-minor"><input class="form-control input-lg center" type="text" v-model="obj.name" placeholder="NAME"><textarea class="form-control" type="textarea" v-model="obj.notes" placeholder="ADD NOTES"></textarea><div class="content-minor box"><div class="header strong center">Population ({{obj.pop}})</div><c-cfp-ppl v-for="ppl in obj.people" v-bind:P="ppl"></c-cfp-ppl></div><div class="input-group"><span class="input-group-addon strong">Government</span><select class="form-control" v-model="obj.government"><option  v-for="g in govt" v-bind:value="$index">{{g[0]}}</option></select></div><div class="center strong bottom-pad">{{govt[obj.government][1]}}</div><div v-for="key in keys" class="input-group"><span class="input-group-addon strong">{{titles[$index] | capitalize}}</span><input class="center form-control" type="text" v-model="obj[key]"></div></div>',data:function(){return{keys:["economy","taxes","issue","idegree","threat"],titles:["economy","taxes","issue","Issue Degree","threat"],govt:CPX.CFP.govt}}}),Vue.component("c-cfp-result",{props:["obj","idx","allgens"],template:'<div><h4 class="center header">{{obj.name}} {{obj.class[1] | capitalize}}<button v-on:click="remove" type="button" class="close"><span aria-hidden="true">&times;</span></button></h4><button v-on:click="save" type="button" class="btn btn-info btn-block bottom-pad">Save</button><component v-bind:is="type" v-bind:obj="obj" v-bind:idx="idx"></component></div>',computed:{type:function(){return objExists(this.obj)?"c-cfp-"+this.obj.seed[0]:"c-cfp-30S"}},methods:{save:function(){CPXSAVE.setItem(this.obj._id,this.obj).then(function(){}),objExists(this.allgens[this.obj._id])||Vue.set(this.allgens,this.obj._id,this.obj.name)},remove:function(){HUB.$emit("CFP-remove",this.idx)}}}),Vue.component("c-cfp",{template:'<div><h2 class="center">City/Stronghold Generator</h2><c-menubar id="CFP" v-bind:show="showmenu"></c-menubar><c-loadselect id="CFP" v-bind:list="allgens" v-bind:show="showlist.load"></c-loadselect><div class="center content-minor"><div class="btn-group bottom-pad" role="group" aria-label="..."><button v-on:click="d30C" type="button" class="btn btn-info">d30 City</button><button v-on:click="d30S" type="button" class="btn btn-info">d30 Stronghold</button></div><div class="btn-group bottom-pad" role="group" aria-label="..."><button v-on:click="DWS" type="button" class="btn btn-info">DW Stading</button><button v-on:click="CPC" type="button" class="btn btn-info">CPX City</button></div></div><c-cfp-result v-for="obj in current" v-bind:obj="obj" v-bind:type="type" v-bind:idx="$index" v-bind:allgens="allgens"></c-cfp-result></div>',data:function(){return{vid:"CFP",loadids:["30C","30S","DWS","CPC"],showmenu:{new:!0,load:!0,save:!1,close:!0},type:"",showlist:{load:!1},current:[],allgens:{}}},created:function(){CPX.vue.page.onCreated(this)},beforeDestroy:function(){CPX.vue.page.onBeforeDestroy(this)},methods:{load:function(a){var b=[a].concat(this.current);this.current=b},new:function(){this.current=[]},d30C:function(){this.current=[];for(var a=0;a<4;a++)this.current.push(CPX.CFP.city({seed:["30C","-",CPXC.string({length:27,pool:base62})],type:CPXC.rpg("1d9")[0]+1}))},d30S:function(){this.current=[];for(var a=0;a<4;a++)this.current.push(CPX.CFP.stronghold({seed:["30S","-",CPXC.string({length:27,pool:base62})]}))},DWS:function(){this.current=[];for(var a=0;a<4;a++)this.current.push(CPX.DWSteading({seed:["DWS","-",CPXC.string({length:27,pool:base62})],type:CPXC.pickone(CPX.data.DWSteadings.basic)}))},CPC:function(){this.current=[];for(var a=0;a<4;a++)this.current.push(CPX.city({seed:["CPC","-",CPXC.string({length:27,pool:base62})],size:CPXC.natural({min:1,max:5})}))},generate:function(){},remove:function(a){this.current.splice(a,1)},close:function(){CPX.vue.page.close(),this.current=[],this.allgens={}}}}),CPX.FP={},CPX.FP.factions=["Refugees","Bandits","Pirates","Halfings","Gnolls","Goblins","Lycantrophes","Ogres","Orcs","Hobgoblins","Trolls","Kobolds","Lizardfolk","Sahuagin","Gargoyles","Harpies","Minotaurs","Yeti","Giant Insects","Giant Spiders","Giant Bugs","Demi-humans","Monstrous Humaniods","Beasts","Elves","Dwarves","Gnomes","Merfolk","Secret Brotherhood","Assassins","Monks","Dark Elves","Deep Dwarves","Ghouls","Wights","Wraiths","Ghosts","Vampires","Aliens (Hive)","Aliens (Conquerors)","Aliens (Breeders)","Aliens (Experimentors)","Undead","Constructs","Elementals","Wizards","Cultists","Dragons","Golems","Liches","Genies","Outsiders (Positive)","Outsiders (Negative)","Outsiders (Neutral)","Aliens (Alien)","Foreigners","Evil Empire","Snake Men"],CPX.FP.threats=["Bandit","Monstrous Humanoid","Demi-human","Beast","Alien Predator","Intelligent Alien","Dragon","Elemental","Outsider","Undead","Construct","Wizard","Vermin"],CPX.FP.villains=["Gang Lord","Murderer","Internal Faction","Cult Leader","Ruler of Lost Civilization","Wicked Foreigner","Thief","Assassin","Femme Fatale","Law Official","Dictator","Foreign Allied Faction","Powerful Noble","Merchant","Crime Lord","Pirate","Anarchist","Royal","Government Official","Mastermind","Nemesis","Creature","Ruler","Former Ally","Monstrous Humanoid","Fanatic","Friend","Barbarian","Enemy","Shadowy Figure","Ally","Priest","Gang","Stranger","Nation","Mercenary","Criminals","Warrior","Watchmen","Spy","Military Veteran","Lunatic","Adventurer","Warlord","Recurring NPC","Champion","Construct","Undead","Giant","Invader","Demi-human","Immortal","Guild","Monster","Abberation","Outlaw","Traitor","Cult","Wizard","Supernatural Threat","Mad Alchemist","Alien","Dragon","Magic User","Magical Beast","Artifact","Outsider","Sorcerer","Deity","Hazardous Environment","Time","War","Conspiracy","Puzzle"],CPX.FP.agendas=["Radical","Fiend","Destroyer","Invader","Collaborator"],CPX.FP.hooks=["Solicitation","Dead Body","Disaster","Attack","Bizarre Occurrence","News","Friend in Need","Up To Their Necks"],CPX.DW={},CPX.DW.DangerTypes=["Ambitious Organization","Planar Force","Arcane Enemy","Horde","Cursed Place"],CPX.DW.DangerList=[[["Misguided Good","To do what is 'right' no matter the cost"],["Thieves Guild","To take by subterfuge"],["Cult","To infest from within"],["Religious Organization","To establish and follow doctrine"],["Corrupt Government","To maintain the status quo"],["Cabal ","To absorb those in power, to grow"]],[["God","To gather worshippers"],["Demon Prince","To open the gates of Hell"],["Elemental Lord","To tear down creation to its component parts"],["Force of Chaos","To destroy all semblance of order"],["Choir of Angels","To pass judgement"],["Construct of Law","To eliminate perceived disorder"]],[["Lord of the Undead","To seek true immortality"],["Power-mad Wizard","To seek magical power"],["Sentient Artifact","To find a worthy wielder"],["Ancient Curse","To ensnare"],["Chosen One","To fulfill or resent their destiny"],["Dragon","To hoard gold and jewels, to protect the clutch"]],[["Wandering Barbarians","To grow strong, to drive their enemies before them"],["Humanoid Vermin","To breed, to multiply and consume"],["Underground Dwellers","To defend the complex from outsiders"],["Plague of the Undead","To spread"]],[["Abandoned Tower","To draw in the weak-willed"],["Unholy Ground","To spawn evil"],["Elemental Vortex","To grow, to tear apart reality"],["Dark Portal","To disgorge demons"],["Shadowland","To corrupt or consume the living"],["Place of Power","To be controlled or tamed"]]],CPX.DW.ImpendingDoom=[["Tyranny","rule of the strong over the weak or the few over the many"],["Pestilence","the spread of sickness and disease, the end of wellness"],["Destruction","apocalypse, ruin and woe"],["Usurpation","the chain of order comes apart, someone rightful is displaced"],["Impoverishment","enslavement, the abandonment of goodness and right"],["Rampant Chaos","the laws of reality, of society, or any order is dissolved"]],CPX.FP.Villain=function(a){var b=[],c={};return 1==a.d10()?(b=a.pickone(CPX.DW.DangerList[4]),c.name=b[0],c.reason=b[1],c.class=["danger"]):1==a.rpg("1d3")[0]?(b=a.pickone(CPX.DW.DangerList[a.d4()-1]),c.name=b[0],c.class=["danger"],c.reason=a.pickone(SAG.vreason)):(c=CPX.people(a,{rank:a.weighted(["uncommon","rare","legendary"],[4,.8,.2])}),c.reason=a.pickone(SAG.vreason)),c.doom=a.pickone(CPX.DW.ImpendingDoom),c.tags=[a.pickone(COLORDESCRIPTORS)].concat(CPX.creature.special(a,"aspect"),CPX.creature.special(a,"ability"),CPX.creature.special(a,"element"),CPX.creature.special(a,"magic")),c.tags=c.tags.join(", "),c},CPX.FP.Location=function(a){var b="",c=["Mountains","Forest/Jungle","Desert/ Wasteland","...by the Sea","Island","Plains","Swamp","Hills","Underground"],d=["Another Plane","Distant Kingdom","The South","The North","The West","The East","Frontier","Foreign Land","Border","Across the Sea","Nearby Kingdom","Fabled Land"],e=["Wilderness","Town","Fortification","Ruins"];return a.bool({likelihood:25})&&(b+=a.pickone(d)+": "),a.bool({likelihood:33})&&(b+=a.pickone(c)+" & "),b+=a.pickone(c)+" ("+a.pickone(e)+") "},CPX.FP.Plot=function(a){var b=["Assassinate","Combat","Guide","Chase","Disguise","Move","Conceal","Strike","Assist","Discover","Avenge","Quest For","Travel with","Track","Obliterate","Reveal","Find","Protect","Liberate","Escort","Deliver","Aid","Encounter","Beset","Retrieve","Attack","Foil","Rescue","Defeat","Assault","Oppose","Shield","Race","Serve","Guard","Meet","Investigate","Get Past","Speak with","Contend with","Negotiate with","Defend","Explore","Resist","Support","Fight","Observe","Infiltrate","Join","Take","Journey to/with","Repel","Destroy","Protect","Fight","Kill","Steal","Escape from","Create","Safeguard","Battle","Trap","Locate","Save","Manipulate","Sell","Acquire","Kill","Control","Steal","Create","Hunt","Terrorize","Infiltrate","Overthrow","Obliterate","Ransom","Blackmail","Hijack","Bomb","Smuggle","Murder","Rob","Attack","Rule","Take","Destroy","Extort"],c=["Angel","Demon","Treasure","Wizard","God","Army","Monster","New Race","Princess","Thief","Friend","Magical Beast","Soldiers","Bard","Monk","Magical Event","Organization","Giant","Enemy","Undead","Villain","Rogue","Barbarian","Merchant","Secret","Warlord","Gem or Jewel","Ally","Village","Warrior","Stranger","Woman","Item","Secret","Rival","Peasants","Magic","Artifact","Noble","Man","Construct","Priest","Oracle","Dragon","Dungeon","Kingdom","Child","Creature","Ruler","Map","Guards","Humanoid","Castle","Weapon","Animal","Magic Item","Monster","Government","Abberation","Outsider","Love Interest","Sorcerer","Humanoid","Prophecy","Monster","Building","People","a Country","Treasure","an Enemy","an Object","an Invention","a Woman","a Man","the Hero (or team)","Money","a City","the World","a Vehicle","a Business","a Lost World","Jewels","a Ruler","Someone famous","a Rival","the Law","Innocent Victims","Hero's Friends or Family"];return a.pickone(b)+" "+a.pickone(c)},CPX.FP.Faction=function(a,b){for(var c=a.weighted(["uncommon","rare","legendary"],[4,1,.2]),d=CPX.people(a,{rank:c}),e=["want to protect their territory","are hunting","are raiding","are warring","are seeking","are increasing in number","are scheming","are hiding","are seeking to trade"],f=0;f<4;f++)e.push("want to "+CPX.FP.Plot(a));return b.length>1&&e.push("allied to the "+a.pickone(b).name),d.profession=CPX.professions(a,["Bandits","Refugees","Cult","Mob","Mystics"]),d.desire=a.pickone(e),d},CPX.FP.SupportingCast=function(a){for(var b=a.diceSum("2d4"),c=[],d="",e=["Neat","Foreign","Ambitious","Wild","Patriotic","Hard-boiled","Urban","Old","Native","Secretive","Quirky","Big","Small","Young"],f=["Trustworthy","Lucky","Beautiful","Talented","Highly Trained","Helpful","Professional","Athletic","Agile","Famous","Well Connected","Empathetic","Sharp Eyed","Quick Thinking","Logical","Smart","Educated","Strong","Tough","Intimidating","Powerful","Understanding","Smooth Talking","Charming","Rich","Nimble Footed","Strong Willed"],g=["Evil","Odd","Amateur","Violent","Feisty","Ugly","Shifty","Helpless","Troublesome","Sloppy","Dense","Cold","Impulsive","Clumsy","Dangerous","Weak","Unlucky","Menacing","Weak-willed","Slow","Deceptive","Shifty","Unperceptive","Sickly","Unimpressive","Bumbling","Poor"],h=["Actor","Captain","Soldier","Government Official","Contact","Burglar","Merchant","Guide","Servant","Noble","Wizard","Healer","Criminal","Investigator","Spouse","Expert","Informant","Farmer","Thug","Fanatic","Academic","Assistant","Worker","Henchman","Kid","Fighter","Barbarian","Monk","Cleric","Priest","Thief","Scout","Explorer","Ranger","Bard","Royal","Druid","Foreigner"],i=0;i<b;i++)d=a.pickone(e),a.bool({likelihood:15})&&(d+=" and "+a.pickone(f)),d+=" but "+a.pickone(g)+" "+a.pickone(h),c.push(d);return c},CPX.FP.PlotTwist=function(a){var b=["Betrayal!","New Location: "+CPX.FP.Location(a),"Greater Villain","Hidden Plot: "+CPX.FP.Plot(a),"Reversal!","Bizarre Occurrence","Deus Ex Machina"],c=a.pickone(b);if("Greater Villain"==c){var d=CPX.FP.Villain(a);c="Greater Villain: "+d.name}return c},CPX.FP.AdventureComplication=function(a){var b=["Ambush","Monsters","Enemy","Ranged Assault","Magical Attack","Mob","Brawl"],c=["Travel Problem","Getting Lost","Environment","Weather","Disaster","Barriers","Physical Challenge","Side-tracked","Magical Event","Magical Barrier"],d=["Trap","Mechanical Trap","Equipment Failure","Construct","Lack of Information","Red Herring","Race","Contest","Tournament","Puzzles","Physical Puzzle","Riddles","Unknown Language","Mystery","Magical Mystery","Magical Trap","Magical Puzzle"],e=["Trickery","Theft","Criminals","Thieves","Spies","Abduction","Misdirection"],f=["Royal Influence","Power Struggle","Politics","Love Interest","Bureaucracy","Diplomacy","Superstition","Royal Ambition","Social Event","Angry Mob","Frightened Commoners","Power Struggle","Noble Influence","Military Influence","Guild Influence","Local Conflict","Legal Trouble","Lack of trust","Religion"],g=["Duel","Rivalry","Vendetta","Betrayal","Double-Cross","Mistaken Identity","Deity Interference"],h=["Drugs","Insanity","Fear","Money","Taxes","Disease","Plague","Famine","Innocents","War","Invasion"],i=["Chest","Locker","Treasure Map","Cache"],j=[b,c,d,e,f,g,h,i];return a.pickone(a.pickone(j))},CPX.FP.Adventure=function(a){var b={seed:a.seed,factions:[],twist:"",complication:"",hook:"",cast:[]};b._id=b.seed.join(""),b.RNG=new Chance(b._id),b.villain=CPX.FP.Villain(b.RNG),b.plot=CPX.FP.Plot(b.RNG),b.location=CPX.FP.Location(b.RNG);for(var c=0;c<Number(b.RNG.rpg("1d3"))+1;c++)b.factions.push(CPX.FP.Faction(b.RNG,b.factions));return b.twist=CPX.FP.PlotTwist(b.RNG),b.complication=CPX.FP.AdventureComplication(b.RNG),b.hook=b.RNG.pickone(CPX.FP.hooks),b.cast=CPX.FP.SupportingCast(b.RNG),b.RNG=null,delete b.RNG,b},Vue.component("c-fpg-villain",{props:["V"],template:'<div class="box"><h4 class="center strong">Villain</h4><input class="form-control center strong" type="text" v-model="V.name" placeholder="NAME"><div class="input-group "><span class="input-group-addon strong">Tags</span><textarea class="center form-control" type="textarea" v-model="V.tags"></textarea></div><div class="input-group "><span class="input-group-addon strong">Reason</span><input class="center form-control" type="text" v-model="V.reason"></div></div>'}),Vue.component("c-factions",{props:["factions"],template:'<div><strong>Main Factions:</strong><ul><li v-for="f in factions"><div><strong>{{f.name}} {{f.profession}}</strong> who {{f.desire}}</div><div v-if="f.special.length>0"><strong>Tags:</strong> {{f.special.unique().join(`, `) | capitalize }}</div></li></ul></div>'}),Vue.component("c-fpg-FPG",{props:["A","idx"],template:'  <div class="content-minor">    <input class="form-control input-lg center" type="text" v-model="A.name" placeholder="NAME">    <textarea class="form-control" type="textarea" v-model="A.notes" placeholder="ADD NOTES"></textarea>    <c-fpg-villain v-bind:V="A.villain"></c-fpg-villain>    <div><strong>Plot:</strong> {{A.plot}}</div>    <div><strong>Doom:</strong> {{A.villain.doom[0]}} ({{A.villain.doom[1]}})</div>    <div><strong>Location:</strong> {{A.location}}</div>    <c-factions v-bind:factions="A.factions"></c-factions>    <div v-if="idx>1"><strong>Twist:</strong> {{A.twist}}</div>    <div v-if="idx==0"><strong>Hook:</strong> {{A.hook}}</div>    <div v-if="idx==0"><strong>Supporting Cast: </strong>        <ul><li v-for="c in A.cast">{{c}}</li></ul>    </div>  </div>  '}),Vue.component("c-fpg-result",{props:["A","idx","allgens"],template:'  <h4 class="header">    <div class="btn-group" role="group" aria-label="...">      <button v-on:click="remove" type="button" class="btn btn-sm">        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>      </button>      <button v-if="idx>0" v-on:click="move(-1)" type="button" class="btn btn-sm"><span class="glyphicon glyphicon-chevron-up"></span></button>      <button v-on:click="move(1)" type="button" class="btn btn-sm"><span class="glyphicon glyphicon-chevron-down"></span></button>    </div>    {{header}} {{A.name}}  </h4>  <component v-bind:is="type" v-bind:A="A" v-bind:idx="idx"></component>  <div class="center bottom-pad">    <button v-on:click="save" type="button" class="btn btn-info">Save This As A New Adventure</button>  </div>  ',computed:{type:function(){return objExists(this.A)?"c-fpg-"+this.A.seed[0]:"c-fpg-FPG"},header:function(){return 0==this.idx?"Central Plot":"Adventure"}},methods:{save:function(){var a={name:this.A.name,arc:[this.A]};CPXSAVE.setItem(this.A._id,a).then(function(){}),objExists(this.allgens[this.A._id])||Vue.set(this.allgens,this.A._id,this.A.name)},remove:function(){HUB.$emit("FPG-remove",this.idx)},move:function(a){HUB.$emit("FPG-move",{i:this.idx,val:a})}}}),Vue.component("c-fpg",{template:'  <h2 class="center">Fantasy Plot Generators</h2>  <c-menubar id="FPG" v-bind:show="showmenu"></c-menubar>  <c-loadselect id="FPG" v-bind:list="allgens" v-bind:show="showlist.load"></c-loadselect>  <div class="center content-minor">    <div class="btn-group bottom-pad" role="group" aria-label="...">      <button v-on:click="JTF" type="button" class="btn btn-info">CPX Fantasy</button>      <button v-on:click="d30S" type="button" class="btn btn-info">d30 Sandbox</button>    </div>    <button v-show="content.length>0" v-on:click="add" type="button" class="btn btn-info">Add New Adventure To Arc</button>  </div>  <c-fpg-result v-for="A in content" v-bind:A="A" v-bind:idx="$index" v-bind:allgens="allgens"></c-fpg-result>',data:function(){return{vid:"FPG",loadids:["FPG","SAG"],showmenu:{new:!0,load:!0,save:!0,close:!0},showlist:{load:!1},content:[],allgens:{}}},created:function(){CPX.vue.page.onCreated(this),HUB.$on("FPG-move",this.move)},beforeDestroy:function(){CPX.vue.page.onBeforeDestroy(this),HUB.$off("FPG-move",this.move)},methods:{add:function(a){this.content.length>0&&(a=this.content[0].seed[0]),"FPG"==a?this.content.push(CPX.FP.Adventure({seed:["FPG","-",CPXC.string({length:27,pool:base62})]})):this.content.push(SAG.adventure({seed:["SAG","-",CPXC.string({length:27,pool:base62})]}))},move:function(a){var b=[].concat(this.content),c=objCopy(b[a.i]),d=a.i+a.val;d>=b.length||(b[a.i]=objCopy(b[d]),b[d]=c,this.content=[].concat(b))},save:function(){var a={name:this.content[0].name,arc:this.content};CPXSAVE.setItem(this.content[0]._id,a).then(function(){}),objExists(this.allgens[this.content[0]._id])||Vue.set(this.allgens,this.content[0]._id,this.content[0].name)},load:function(a){this.content=a.arc.concat(this.content)},JTF:function(){this.content=[];for(var a=0;a<4;a++)this.add("FPG")},d30S:function(){this.content=[];for(var a=0;a<4;a++)this.add("SAG")},new:function(){this.content=[]},generate:function(){},remove:function(a){this.content.splice(a,1)},close:function(){CPX.vue.page.close(),this.content=[],this.allgens=[]}}}),CPX.mapDimensions=function(){var a=.95*document.getElementById("maps").offsetWidth,b=.95*document.getElementById("maps").offsetHeight;return{width:a,height:b}},CPX.hexMap=function(a){var b={_dtype:"zones",_radial:!1,_pointy:"undefined"==typeof a.pointy||a.pointy,_hexradius:35,seed:"undefined"==typeof a.seed?[CPXC.string({length:32,pool:base62})]:a.seed,cells:{},zones:[],mods:{}};b._id=b.seed.join(""),b.parent="undefined"==typeof a.parent?"":a.parent,b.class="undefined"==typeof a.class?["hexMap"]:a.class,b.special="undefined"==typeof a.special?[]:a.special,b._nZones="undefined"==typeof a.nZones?-1:a.nZones,b._nCells="undefined"==typeof a.nCells?0:a.nCells;var c="undefined"!=typeof a.uniform&&a.uniform;if(b._visible="undefined"==typeof a.visible?[]:a.visible,b._zoneEnter="undefined"==typeof a.zoneEnter?-1:a.zoneEnter,b._parentNeighboors="undefined"==typeof a.parentNeighboors?[]:a.parentNeighboors,b.RNG=new Chance(b.seed.join("")),b._size="undefined"==typeof a.size?CPX.size(b.RNG)/2:a.size,c){if(0==b._nCells)for(var d=0;d<b._size;d++)b._nCells+=Math.round(b.RNG.normal({mean:40,dev:7}));b.zones.push(new Zone(b,0));for(var d=0;d<b._nCells;d++)CPX.hexMap.addCell(b)}else{b._nZones==-1&&(b._nZones=Math.round(10*b._size));for(var d=0;d<b._nZones;d++)CPX.hexMap.addZone(b)}return CPX.hexMap.makeVisible(b),b.RNG=null,delete b.RNG,CPX.hexMap.zoneNeighboors(b),CPX.hexMap.bounds(b),b.opts=a,b.mods=new Nedb,b.mods.persistence.setAutocompactionInterval(12e4),b},CPX.hexMap.pushMod=function(a,b){"set"==b.type?a.mods.update(b.query,{$set:b.data},{upsert:!0},function(){}):"addtoset"==b.type&&a.mods.update(b.query,{$addToSet:b.data},{upsert:!0},function(){})},CPX.hexMap.save=function(a){var b={_id:a._id,seed:a.seed,mods:a.mods,opts:a.opts};CPXSAVE.setItem(a._id,b)},CPX.hexMap.applyMods=function(a){var b=a.opts.mods;return new Promise(function(c,d){a.mods.insert([b],function(a){}),b.forEach(function(b){if(objExists(a.cells[b._id]))for(var c in b)"_id"!=c&&(a.cells[b._id][c]=b[c]);else if(b._id.includes("_")){var d=CPX.hex.cellQR(b._id);a.cells[b._id]=new HCell(d.q,d.r,a.opts.terrain,a.zones[0]),a.zones[0].cells.push(b._id)}else a[b._id]=b.val}),CPX.hexMap.bounds(a),c(a)})},CPX.hexMap.addZone=function(a){var b=CPX.size(a.RNG),c=a.zones.length,d=new Zone(a,c);d.size=b/2,a.zones.push(d);for(var e=a.RNG.pickone(a.zones),f=[],g="",h=0;h<3*b/2;h++){if(g="",0==c&&0==h)g="0_0";else{if(0==h)for(;0==f.length;)f=CPX.hexMap.zoneEmptyNeighboors(a,e.id),e=a.RNG.pickone(a.zones);else if(f=CPX.hexMap.zoneEmptyNeighboors(a,d.id),0==f.length)break;g=a.RNG.pickone(f)}var i=CPX.hex.cellQR(g);a.cells[g]=new HCell(i.q,i.r,-1,d),d.cells.push(g),a._nCells++}CPX.hexMap.zoneBounds(a,d.id)},CPX.hexMap.addCell=function(a){var b=a.zones[0],c="",d=[];objExists(a.cells["0_0"])?(d=CPX.hexMap.zoneEmptyNeighboors(a,b.id),c=a.RNG.pickone(d)):c="0_0";var e=CPX.hex.cellQR(c);a.cells[c]=new HCell(e.q,e.r,-1,b),b.cells.push(c)},CPX.hexMap.cellNeighboors=function(a,b){for(var c={n:[],o:[]},d=CPX.hex.withinX(b,1)[1],e=0;e<d.length;e++)objExists(a.cells[d[e].id])?c.n.push(d[e].id):c.o.push(d[e].id);return c},CPX.hexMap.bounds=function(a){var b={},c=0,d=0,e=0,f=0;for(var g in a.cells)b=a.cells[g],b.q<f&&(f=b.q),b.q>d&&(d=b.q),b.r<e&&(e=b.r),b.r>c&&(c=b.r);a.q=f,a.r=e,a.dw=Math.abs(d-f),a.dh=Math.abs(c-e),a.center={q:f+a.dw/2,r:e+a.dh/2},a.bounds=CPX.hex.mapBounds(a);var h=CPX.hex.center(a._hexradius,a.center,a._pointy);a.center.x=h.x,a.center.y=h.y},CPX.hexMap.zoneBounds=function(a,b){for(var c=a.zones[b],d={},e=0,f=0,g=0,h=0,i=0;i<c.cells.length;i++)d=a.cells[c.cells[i]],d.q<h&&(h=d.q),d.q>f&&(f=d.q),d.r<g&&(g=d.r),d.r>e&&(e=d.r);return c.q=h,c.r=g,c.width=Math.abs(f-h),c.height=Math.abs(e-g),c.center={q:h+c.width/2,r:g+c.height/2},c.radius=Math.sqrt((h+c.width)*(h+c.width)+(g+c.height)*(g+c.height)),c},CPX.hexMap.makeVisible=function(a){for(var b=0,c=0;c<a.zones.length;c++)(a._visible.includes(c)||a._visible.includes("all"))&&(a.zones[c].visible=!0,b++);if(a._zoneEnter==-1){var d=CPX.hexMap.zoneOnEdge(a);a._zoneEnter=a.RNG.pickone(d)}0==b&&(a.zones[a._zoneEnter].visible=!0)},CPX.hexMap.zoneEmptyNeighboors=function(a,b){for(var c=a.zones[b],d=[],e=0;e<c.cells.length;e++)d=d.concat(CPX.hexMap.cellNeighboors(a,a.cells[c.cells[e]]).o);return d.unique()},CPX.hexMap.zoneOnEdge=function(a){var b=[];for(var c in a.cells)CPX.hexMap.cellNeighboors(a,a.cells[c]).o.length>0&&b.push(a.cells[c].zone);return b.unique()},CPX.hexMap.zoneNeighboors=function(a){var b=[],c=-1,d=-1,e=[];for(var f in a.cells){c=a.cells[f].zone,objExists(b[c])||(b[c]=[]),e=CPX.hexMap.cellNeighboors(a,a.cells[f]).n;for(var g=0;g<e.length;g++)d=a.cells[e[g]].zone,c!=d&&(b[c].includes(d)||b[c].push(d))}return a._ZN=b,b},CPX.hexMap.mapClick=function(a){var b=a.target,c=b.data,d=CPXDB[c.map],e=d.cells[c.cid],f=d.zones[e.zone],g=CPXAU.location[CPXAU.location.length-1];CPXAU.location.join("").includes(d._id)&&g==f.id||d._ZN[g].includes(f.id)&&CPX.hexMap.enterZone(d,f)},CPX.display.drawTokens=function(a){objExists(a.display.tokens)&&a.display.stage.removeChild(a.display.tokens),a.display.tokens=new createjs.Container;var b={},c={};a.tokens.forEach(function(d){c={map:a._id,cid:ac.id},CPX.display.makeGraphics({dtype:makeShape,onClick:CPX[a.class[0]].mapClick,container:a.display.tokens,data:{token:b,map:a,size:b.size,stroke:b.line,fill:b.color}})})},CPX.display.drawHex=function(a){var b=["hexmap","siteMarkers"];b.forEach(function(b){objExists(a.display[b])&&a.display.stage.removeChild(a.display[b]),a.display[b]=new createjs.Container});var c={},d={},e={},f="",g=.5;for(var h in a.cells)c=a.cells[h],(a.zones[c.zone].visible||a.visible.includes(c.zone))&&(d={map:a._id,cid:c.id},f=hexToRgbA(a.zones[c.zone].color,g),a.class.includes("terrain")&&(f=terrainColors[c.terrain]),e={hex:c,map:a,data:d,size:a._hexradius,stroke:"black",fill:f},CPX.display.makeGraphics({dtype:makeHex,onClick:CPX[a.class[0]].mapClick,container:a.display.hexmap,data:e})),c.special.forEach(function(b){b.shape="circle",f=0==b.class[0].length?"white":HEXSITES[b.class[0]].color,CPX.display.makeGraphics({dtype:makeShape,onClick:CPX[a.class[0]].mapClick,container:a.display.siteMarkers,data:{hex:c,map:a,data:d,size:5,shape:"circle",stroke:"black",fill:f}})});b.forEach(function(b){a.display.stage.addChild(a.display[b])}),CPX.display.drawTokens(a),CPX.display.centerAdjust(a)},CPX.display.clearActive=function(a){if(objExists(a.display)){var b=["hexmap","siteMarkers","tokens"];b.forEach(function(b){a.display[b].children.forEach(function(a){a.removeAllEventListeners()})}),delete a.display}},CPX.display.hexMap=function(a){CPX.display.clearActive(a),a.display={data:{}},a.display.canvas=$("#"+a._id+" canvas")[0],a.display.stage=new createjs.Stage(a.display.canvas),CPX.display.drawHex(a)};const HEXSITES={all:["town","stronghold","lair","natural","ruin","resource","other"],town:{class:["town"],color:"black"},stronghold:{class:["stronghold"],color:"green"},ruin:{class:["ruin"],color:"grey"},natural:{class:["natural"],color:"blue"},resource:{class:["resource"],color:"yellow"},lair:{class:["lair"],color:"red"},other:{class:["ruin"],color:"orange"}};CPX.rectHexArea=function(a){var b={class:["rectHexArea","hexMap","pointy","terrain"],_hexradius:35,seed:"undefined"==typeof a.seed?[CPXC.string({length:32,pool:base62})]:a.seed,parent:"undefined"==typeof a.parent?"":a.parent,special:"undefined"==typeof a.special?[]:a.special,name:"undefined"==typeof a.name?"":a.name,notes:"undefined"==typeof a.notes?"":a.notes,opts:a,width:a.width,height:a.height,selected:[],tokens:[],cells:{},zones:[],mods:{}};b._id=b.seed.join(""),b.RNG=new Chance(b.seed.join(""));var c=new Zone(b,0);return c.visible=1,b.zones.push(c),b.mods=new Nedb,b.mods.persistence.setAutocompactionInterval(12e4),CPX.rectHexArea.addCells(b),b},CPX.rectHexArea.addCells=function(a){var b=a.opts.width,c=a.opts.height;"CHM"==a.seed[0]&&(b=a.width,c=a.height);for(var d=0,e="",f=a.zones[0],g=-Math.floor(c/2);g<Math.ceil(c/2);g++){
for(var h=-Math.floor(b/2)-Math.floor(d/2);h<Math.ceil(b/2)-Math.ceil(d/2);h++)if(e=h+"_"+g,!objExists(a.cells[e])&&(a.cells[e]=new HCell(h,g,a.opts.terrain,f),f.cells.push(e),"CHM"==a.seed[0]&&(b!=a.opts.width||c!=a.opts.height))){var i={_id:e},j={terrain:a.opts.terrain};CPX.hexMap.pushMod(a,{query:i,type:"set",data:j})}d++}CPX.hexMap.bounds(a)},CPX.rectHexArea.mapClick=function(a){var b=a.target,c=b.data,d=CPXDB[c.map],e=d.cells[c.cid];if(d.zones[e.zone],d.VU.palette>-1){var f={_id:c.cid},g={terrain:d.VU.palette};CPX.hexMap.pushMod(d,{query:f,type:"set",data:g}),e.terrain=d.VU.palette}else d.selected[0]==c.cid?d.selected=[]:d.selected=[c.cid];d.VU.display()},Vue.component("c-cha-site",{props:["site","ids"],template:'<div class="input-group strong"><input class="form-control" type="text" v-model="site.name" placeholder="NAME"><span class="input-group-btn"><button v-on:click="removeSite" type="button" class="btn"><span class="glyphicon glyphicon-minus" aria-hidden="true"></span></button></span></div><div class="input-group strong" ><span class="input-group-addon strong">Type</span><select class="form-control" v-model="site.class[0]" @change="mod"><option class="center" v-for="site in hexsites.all" v-bind:value="site">{{site | capitalize}}</option></select><span class="input-group-addon strong">Size</span><select class="form-control" v-model="site.size" @change="mod" v-if="site.class[0]==`town`"><option class="center" v-for="size in citysize" v-bind:value="$index">{{size | capitalize}}</option></select><input class="form-control" type="number" v-model="site.size" v-else></div>',data:function(){return{hexsites:HEXSITES,citysize:CPX.CFP.citysizes}},methods:{mod:function(){HUB.$emit("CHA-mod",{query:{_id:this.ids.cid},data:{special:CPXDB[this.ids.mid].cells[this.ids.cid].special.concat([])},type:"set"})},removeSite:function(){CPXDB[this.ids.mid].cells[this.ids.cid].special.splice(this.ids.i,1),this.mod()}}}),Vue.component("c-cha-cell",{props:["cell","mid"],template:'<div class="box content-minor"><h4 class="center header">{{cell.name}}</h4><input class="form-control center" type="text" v-model="cell.name" placeholder="NAME" @change="mod(`name`)"><textarea class="form-control" type="textarea" v-model="cell.notes" placeholder="ADD NOTES" @change="mod(`notes`)"></textarea><h4 class="center">Sites <button v-on:click="addSite" type="button" class="btn btn-sm"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></button></h4><c-cha-site v-for="site in cell.special" v-bind:site="site" v-bind:ids="{mid:mid,cid:cell.id,i:$index}"></c-cha-site></div>',data:function(){return{}},methods:{mod:function(a){if(this.cell[a].length>0){var b={};b[a]=this.cell[a],HUB.$emit("CHA-mod",{query:{_id:this.cell.id},data:b,type:"set"})}},addSite:function(){this.cell.special.push({class:[""]})}}}),Vue.component("c-cha",{template:'  <div class="slim center-div box">    <h2 class="center" v-show="!showlist.minimal">HexMap Area Builder</h2>    <h4 class="center header" v-show="showlist.minimal">{{map.name}}</h4>    <div v-show="!showlist.minimal">      <c-menubar id="CHA" v-bind:show="showmenu"></c-menubar>      <c-loadselect id="CHA" v-bind:list="allgens" v-bind:show="showlist.load"></c-loadselect>      <div class="center content-minor">        <div class="btn-group" role="group" aria-label="...">          <button v-on:click="buildShow" type="button" class="btn btn-info">Build Your Own</button>          <button v-on:click="randomShow" type="button" class="btn btn-info">Random Hex Area</button>        </div>      </div>      <div class="input-group strong" v-show="showlist.globalTerrain">        <span class="input-group-addon strong">Terrain</span>        <select class="form-control" v-model="dataterrain">          <option v-for="t in terrains" v-bind:value="$index">{{t | capitalize}}</option>        </select>        <span class="input-group-btn" v-show="showlist.changeTerrain">          <button v-on:click="globalTerrain" type="button" class="btn strong">Change</button>        </span>      </div>      <div class="input-group strong" v-show="showlist.makegen">        <span class="input-group-addon strong" >Pop Density</span>        <select class="form-control" v-model="popdensity">          <option v-for="d in desnities" v-bind:value="$index">{{d | capitalize}}</option>        </select>      </div>      <div class="input-group strong" v-show="showlist.makegen">        <span class="input-group-addon strong">Width</span>        <input class="form-control center" type="number" v-model="width" min=10">        <span class="input-group-addon strong">Height</span>        <input class="form-control center" type="number" v-model="height" min=10">      </div>      <div class="center" v-show="showlist.make">        <button v-on:click="make" type="button" class="btn btn-info strong">Generate Map</button>      </div>      <div class="center" v-show="showlist.addcells">        <div class="btn-group" role="group" aria-label="...">          <button v-on:click="addCells(`w`)" type="button" class="btn strong">            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Width          </button>          <button v-on:click="addCells(`h`)" type="button" class="btn strong">            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Height          </button>        </div>      </div>      <div class="content" v-show="hasmap">        <input class="form-control center" type="text" v-model="map.name" placeholder="NAME">        <textarea class="form-control" type="textarea" v-model="map.notes" placeholder="Notes"></textarea>      </div>    </div>    <c-cha-cell v-for="cid in map.selected" v-bind:cell="map.cells[cid]" v-bind:mid="map._id"></c-cha-cell>  </div>  <div id="{{map._id}}" class="map active" v-bind:class="front" v-show="showlist.map">    <canvas width="{{bounds.x}}" height="{{bounds.y}}"></canvas></div>  <div class="footer box strong slim">    <div class="center">      <div class="btn-group" role="group" aria-label="...">        <button v-on:click="palette=-1" type="button" class="btn"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span></button>        <button v-on:click="frontback" type="button" class="btn">{{front | capitalize}}</button>        <button v-on:click="zoom(-1)" type="button" class="btn">Z <span class="glyphicon glyphicon-minus" aria-hidden="true"></span></button>        <button v-on:click="zoom(1)" type="button" class="btn">Z <span class="glyphicon glyphicon-plus" aria-hidden="true"></span></button>        <button v-on:click="showlist.minimal=!showlist.minimal" type="button" class="btn">          <span class="glyphicon" v-bind:class="isMinimal" aria-hidden="true"></span>Menu        </button>      </div>    </div>    <div class="input-group">      <span class="input-group-addon strong">Terrain Paint</span>      <select class="form-control" v-model="palette">        <option v-for="t in terrains" v-bind:value="$index">{{t | capitalize}}          <span class="palette square" v-bind:class="t"></span>        </option>      </select>    </div>  <div>  ',data:function(){return{vid:"CHA",loadids:["CHA","CHM"],showmenu:{new:!0,load:!0,save:!0,close:!0},showlist:{load:!1,map:!0,make:!1,changeTerrain:!1,globalTerrain:!1,addcells:!1,makegen:!1,minimal:!1,paint:!1},type:"",front:"back",desnities:CPX.CFP.densities,popdensity:0,terrains:TERRAINS,tcolor:terrainColors,palette:-1,dataterrain:0,seed:[],width:12,height:12,map:{},allgens:{}}},created:function(){CPX.vue.page.onCreated(this)},beforeDestroy:function(){CPX.vue.page.onBeforeDestroy(this)},computed:{bounds:function(){return this.hasmap?this.map.bounds:{x:0,y:0}},hasmap:function(){return objExists(this.map.cells)},isMinimal:function(){return this.showlist.minimal?"glyphicon-plus":"glyphicon-minus"}},methods:{make:function(){this[this.type]()},buildShow:function(){this.new(),this.type="build",this.showlist.globalTerrain=!0,this.showlist.make=!0},randomShow:function(){this.new(),this.type="random",this.showlist.makegen=!0,this.showlist.globalTerrain=!0,this.showlist.make=!0},globalTerrain:function(){for(var a in this.map.cells)this.map.cells[a].terrain==this.map.opts.terrain&&(this.map.cells[a].terrain=this.dataterrain);this.map.opts.terrain=this.dataterrain,this.display()},addCells:function(a){"CHA"==this.map.seed[0]?"w"==a?this.map.opts.width++:this.map.opts.height++:"w"==a?this.map.width++:this.map.height++,CPX.rectHexArea.addCells(this.map),Vue.nextTick(this.display)},mod:function(a){CPX.hexMap.pushMod(this.map,{query:a.query,type:a.type,data:a.data}),this.display()},frontback:function(){"front"==this.front?this.front="back":this.front="front"},zoom:function(a){5==this.map._hexradius&&a==-1||(1==a?this.map._hexradius+=5:this.map._hexradius-=5,CPX.hexMap.bounds(this.map),Vue.nextTick(this.display))},save:function(){var a=this,b=objCopy(this.map.opts);b._id=this.map._id,b.name=this.map.name,b.notes=this.map.notes,this.map.mods.find({},function(c,d){b.mods=d,CPXSAVE.setItem(a.map._id,b).then(function(){}),objExists(a.allgens[a.map._id])||Vue.set(a.allgens,a.map._id,a.map.name)})},load:function(a){this.new(),this.showlist.addcells=!0;var b=this,c=a;"CHM"==c.seed[0]?CPXDB[a._id]=CPX.hexMapGen(c):(CPXDB[a._id]=CPX.rectHexArea(c),this.showlist.globalTerrain=!0,this.showlist.changeTerrain=!0),CPXDB[a._id].VU=this,this.seed=c.seed,objExists(c.mods)?CPX.hexMap.applyMods(CPXDB[a._id]).then(function(a){b.map=a,Vue.nextTick(b.display)}):(b.map=CPXDB[a._id],Vue.nextTick(this.display))},new:function(){this.type="",this.showlist.globalTerrain=!1,this.showlist.make=!1,this.showlist.makegen=!1,this.showlist.changeTerrain=!1,this.showlist.addcells=!1,objExists(this.map.display)&&CPX.display.clearActive(this.map),this.map={}},random:function(){this.new(),this.showlist.addcells=!0,this.seed=["CHM","-",CPXC.string({length:27,pool:base62})],CPXDB[this.seed.join("")]=this.map=CPX.hexMapGen({seed:this.seed,terrain:this.dataterrain,width:this.width,height:this.height,density:this.popdensity}),this.map.VU=this,Vue.nextTick(this.display)},build:function(){this.new(),this.showlist.addcells=!0,this.showlist.globalTerrain=!0,this.showlist.changeTerrain=!0,this.seed=["CHA","-",CPXC.string({length:27,pool:base62})],CPXDB[this.seed.join("")]=this.map=CPX.rectHexArea({seed:this.seed,width:7,height:7,terrain:this.dataterrain}),this.map.VU=this,Vue.nextTick(this.display)},display:function(){CPX.display.hexMap(CPXDB[this.seed.join("")])},close:function(){CPX.vue.page.close(),this.map={},this.allgens={}}}}),CPX.data.mapResources=["Fertile Land","Lush Pasture","Good Fishing","Medicinal Plants","Good Hunting","Old Industry","Good Mine","Rich Gathering","Good Timber","Magical Materials"],CPX.data.mapLairs=["Ancient Evil","Magical Gate","Ancient Fort","Dark Elves/Fae","Aspiring Warlord","Monster Nest","Bandit Camp","Renegade Outpost","Tainted Elemental","School of Dark Sorcery","Dragon","Vicious Humanoids","Cursed Earth","Splinter Faction","Outsiders","Thieves' Stronghold","Deep Dwarves","Undead","Mad Wizard"],CPX.hexMapGen=function(a){var b=CPX.rectHexArea(a);return b.class=["hexMapGen"].concat(b.class),b.density=a.density,CPX.hexMapGen.terrain(b),CPX.hexMapGen.pop(b),CPX.hexMap.bounds(b),b.RNG=null,delete b.RNG,b},CPX.hexMapGen.terrain=function(a){function b(b,c){var d={},e={},f="";do e=0==c.length?a.cells[a.RNG.pickone(b)]:a.cells[a.RNG.pickone(c)],f=a.RNG.pickone(CPX.hex.neighboorIDs(e)),d=a.cells[f];while(void 0==d||c.includes(d.id));return d}function c(a,c){for(var e=[],f={},g=0;g<a;g++)f=b(d,e),e.push(f.id),f.terrain=c}for(var d=CPX.cellArray(a),e=a.opts.terrain,f={0:[3,4,1,2,5,6],1:[3,4,0,2,5,6],2:[5,3,0,1,4,6],3:[4,5,0,1,2,6],4:[3,5,0,1,2,6],5:[6,3,0,1,2,4],6:[5,4,0,1,2,3]},g=Math.round(8*d.length/24),h=0,i=0;g>0;)h=a.RNG.natural({min:1,max:g}),i>10&&(h=g),c(h,f[e][0]),g-=h,i++;for(g=Math.round(2*d.length/24),i=0;g>0;)h=a.RNG.natural({min:1,max:g}),i>7&&(h=g),c(h,f[e][1]),g-=h,i++;for(nw=f[e].slice(2),g=Math.round(1*d.length/24);g>0;)h=a.RNG.natural({min:1,max:g}),c(h,a.RNG.pickone(nw)),g-=h},CPX.hexMapGen.pop=function(a){var b=CPX.CFP,c=b.densities[a.density],d=b[c],e=-1,f="",g="",h=0,i=0;for(var j in a.cells)a.RNG.bool({likelihood:33})&&(e=a.RNG.weighted(d.items,d.p),e>8?(h=a.RNG.weighted([2,3,4,5],[3,6,2,1]),["ruin","stronghold"].includes(b.habitation[e])?(f=b.habitation[e],g=""):(g=b.habitation[e],f="other"),a.cells[j].special.push({name:g,class:[f],size:h})):e>0&&(e>2&&i++,a.cells[j].special.push({class:["town"],size:e-1})));for(var k=-1,l=CPX.cellArray(a),m=CPX.cellArray(a),n="",o=0;o<i;o++)n=a.RNG.pickone(l),k=a.RNG.pickone(CPX.data.mapResources),a.cells[n].special.unshift({name:k,class:["resource"],type:CPX.data.mapResources.indexOf(k)}),l.splice(l.indexOf(n),1),n=a.RNG.pickone(m),k=a.RNG.pickone(CPX.data.mapLairs),a.cells[n].special.push({name:k,class:["lair"],type:CPX.data.mapLairs.indexOf(k)}),m.splice(m.indexOf(n),1)},CPX.hexMapGen.mapClick=function(a){CPX.rectHexArea.mapClick(a)},Vue.component("c-deleteall",{template:'<div class="center content"><button v-on:click="deleteAll" type="button" class="pad-y btn btn-danger">Yes</button><button v-on:click="close" type="button" class="pad-y btn btn-success">Cancel</button></div>',methods:{close:function(){CPX.vue.notify.close()},deleteAll:function(){CPXSAVE.clear(),CPX.vue.notify.close()}}}),CPX.vue.notify=new Vue({el:"#mainNotify",data:{show:!1,showclose:!1,header:"",content:"",deleteall:"false",currentView:""},methods:{open:function(a,b,c,d){null!=d&&(this.currentView=d),this.header=a,this.content=b,this.showclose=c,this.show=!0},close:function(a){this.header="",this.content="",this.deleteall=!1,this.show=!1}}}),Vue.component("c-ogl",{template:"#OGL",methods:{close:function(){CPX.vue.page.close()}}}),Vue.component("c-txt",{template:"#about",methods:{close:function(){CPX.vue.page.close()},showOGL:function(){CPX.vue.page.show=!1,CPX.vue.page.open("c-ogl","wide")}}}),CPX.vue.page=new Vue({el:"#cpxpage",data:{show:!1,width:"",currentView:""},methods:{onCreated:function(a){var b=a.vid;objExists(a.loadids)&&(b=a.loadids),this.loadall(b).then(function(b){a.allgens=b}),a.new(),HUB.$on(a.vid+"-new",a.new),HUB.$on(a.vid+"-close",a.close),HUB.$on(a.vid+"-save",a.save),HUB.$on(a.vid+"-loadObj",a.load),HUB.$on(a.vid+"-remove",a.remove),HUB.$on(a.vid+"-add",a.add),HUB.$on(a.vid+"-mod",a.mod),HUB.$on(a.vid+"-showload",function(){a.showlist.load=!a.showlist.load})},onBeforeDestroy:function(a){HUB.$off(a.vid+"-new",a.new),HUB.$off(a.vid+"-close",a.close),HUB.$off(a.vid+"-save",a.save),HUB.$off(a.vid+"-loadObj",a.load),HUB.$off(a.vid+"-remove",a.remove),HUB.$off(a.vid+"-add",a.add),HUB.$off(a.vid+"-mod",a.mod),HUB.$off(a.vid+"-showload",function(){a.showlist.load=!a.showlist.load})},loadall:function(a){return new Promise(function(b,c){var d={};CPXSAVE.iterate(function(b,c,e){Array.isArray(a)?a.forEach(function(a){c.includes(a+"-")&&(d[c]=b.name)}):c.includes(a+"-")&&(d[c]=b.name)}).then(function(){b(d)})})},newGen:function(a){a.seed=[a.vid,"-",CPXC.string({length:21,pool:base62})],a.generate()},open:function(a,b){this.show=!0,this.currentView=a,this.width=b},close:function(){this.show=!1,this.currentView="",this.genobject={},this.allgens=[],vMainMenu.open()}}}),Vue.component("c-pnc-result",{props:["object","allgens","idx"],template:'  <div class="box margin-full">  <h4 class="header center">{{object.class[0] | capitalize}} ({{object.rank | capitalize}})  <button v-on:click="remove" type="button" class="close"><span aria-hidden="true">&times;</span></button>  </h4>  <div class="bar-bottom pad-bottom content">  <input class="form-control input-lg center" type="text" v-model="object.name" placeholder="NAME">  <textarea class="form-control" type="textarea" v-model="object.notes" placeholder="ADD NOTES"></textarea>  </div>  <div class="content">  <div v-if="object.class.length>1"><strong>Nature: </strong>{{nature | capitalize}}</div>  <div v-if="object.special.length>0"><strong>Tags:</strong> {{object.special.unique().join(", ") | capitalize}}</div>  <button v-on:click="save" type="button" class="btn btn-info btn-block">Save</button>  </div></div>  ',computed:{nature:function(){return this.object.class.slice(1).unique().join(", ")}},methods:{save:function(){CPXSAVE.setItem(this.object._id,this.object).then(function(){}),objExists(this.allgens[this.object.id])||Vue.set(this.allgens,this.object._id,this.object.name)},remove:function(){HUB.$emit("CPC-remove",this.idx)}}}),Vue.component("c-pnc",{template:'  <div>  <h2 class="center">People & Creature Generator</h2>  <c-menubar id="CPC" v-bind:show="showmenu"></c-menubar>  <c-loadselect id="CPC" v-bind:list="allgens" v-bind:show="showlist.load"></c-loadselect>  <c-pnc-result v-for="being in current" v-bind:idx="$index" v-bind:object="being" v-bind:allgens="allgens"></c-pnc-result>  </div>  ',data:function(){return{vid:"CPC",showmenu:{new:!0,load:!0,save:!1,close:!0},showlist:{load:!1},current:[],allgens:{}}},created:function(){CPX.vue.page.onCreated(this)},beforeDestroy:function(){CPX.vue.page.onBeforeDestroy(this)},methods:{load:function(a){var b=[a].concat(this.current);this.current=b},new:function(){this.current=[],this.generate()},generate:function(){for(var a={},b="",c=["common","uncommon","rare","legendary"],d=0;d<3;d++)b="CPC-"+CPXC.string({length:27,pool:base62}),a=new Chance(b),this.current.push(CPX.creature(a,{rank:CPXC.pickone(c)})),this.current[this.current.length-1]._id=b;for(var d=0;d<3;d++)b="CPC-"+CPXC.string({length:27,pool:base62}),a=new Chance(b),this.current.push(CPX.people(a,{rank:CPXC.pickone(c)})),this.current[this.current.length-1]._id=b;this.current=CPXC.shuffle(this.current)},remove:function(a){this.current.splice(a,1)},close:function(){CPX.vue.page.close(),this.current=[],this.saveID="",this.allgens=[]}}}),CPX.PWD={},CPX.PWD.explore=["C","CD","CDI","CDI","CI","CI","TCD","TCDI","TCI","TUD","TUDI","TUI"],CPX.PWD.themes=[["rot/decay","torture/agony","madness","all is lost","noble sacrifice","savage fury","survival","criminal activity","secrets/treachery","tricks and traps","invasion/infestation","factions at war"],["creation/invention","*element","knowledge/learning","growth/expansion","deepening mystery","transformation/change","chaos and destruction","shadowy forces","forbidden knowledge","poison/disease","corruption/blight","impending disaster"],["scheming evil","divination/scrying","blasphemy","arcane research","occult forces","an ancient curse","mutation","the unquiet dead","bottomless hunger","incredible power","unspeakable horrors","holy war"]],CPX.PWD.dangers={core:[["trap","creature","entity"],[4,7,1]]},CPX.PWD.discovery={core:[["dressing","feature","find"],[3,6,3]]},TRAPTYPES=["alarm","ensnaring/paralyzing","pit","crushing","piercing/puncturing","chopping/slashing","confusing (maze, etc.)","gas (poison, etc.)","*element","ambush","*magic"],CPX.PWD.trap=function(a){var b={class:["trap"],text:a.pickone(TRAPTYPES)};return"*"==b.text[0]&&(b.text=b.text.slice(1),b.text=b.text+" ("+a.pickone(SPECIALNATURE[b.text])+")"),b},CPX.PWD.find=function(a){var b={class:["find"],text:""},c=["trinkets","tools","weapons/armor","supplies/trade goods","coins/gems/jewelry","poisons/potions","adventurer/captive","magic item","scroll/book","magic weapon/armor","artifact"];return b.text=a.pickone(c),a.bool({likelihood:8})&&(b.text+=" & "+a.pickone(c)),b},CPX.PWD.entity=function(a){var b={class:["entity"],name:"",special:[]},c=["alien interloper","vermin lord","criminal mastermind","warlord","high priest","oracle","wizard/witch/alchemist","Monster lord","evil spirit/ghost","undead lord","demon","dark god"];return b.name=a.pickone(c),b},CPX.PWD.generate=function(a){var b=CPX.obj({seed:a},{name:"",notes:"",themes:[],areas:[]});b.RNG=new Chance(b.seed.join("")),b.scale=b.RNG.weighted([2,3,4,5],[3,6,2,1]);for(var c=[],d=-1,e=0;e<b.scale;e++)d=b.RNG.weighted([0,1,2],[5,4,3]),d=b.RNG.pickone(CPX.PWD.themes[d]),"*"==d[0]&&(d=d.slice(1),d=d+" ("+b.RNG.pickone(SPECIALNATURE[d])+")"),c.push(d);b.themes=c;var f=[];c.forEach(function(a){for(var c=0;c<b.scale;c++)f.push(a)}),f=b.RNG.shuffle(f);for(var g=0,h=[],i={};g<f.length;)i={theme:"",explored:!1,notes:"",unique:!1},i.ex=b.RNG.pickone(CPX.PWD.explore),i.ex.includes("T")&&(i.theme=f[g],g++),h.push(i);var j="";return h.forEach(function(a,c){special=[];for(var d=0;d<a.ex.length;d++)"I"==a.ex[d]?(j=b.RNG.weighted(CPX.PWD.discovery.core[0],CPX.PWD.discovery.core[1]),["feature","dressing"].includes(j)?h[c].notes+=CPXC.capitalize(j)+": nature of "+j+".\n":special.push(CPX.PWD.find(b.RNG))):"D"==a.ex[d]?(j=b.RNG.weighted(CPX.PWD.dangers.core[0],CPX.PWD.dangers.core[1]),"trap"==j?special.push(CPX.PWD.trap(b.RNG)):"creature"==j?special.push(CPX.encounter(b.RNG)):special.push(CPX.PWD.entity(b.RNG))):"U"==a.ex[d]&&(h[c].unique=!0);h[c].special=special}),b.areas=h,b.RNG=null,delete b.RNG,b},Vue.component("c-pwd-textarea",{props:["object"],template:'  <div class="input-group">  <span class="input-group-addon" id="pwd-addon-i">{{object.class[0] | capitalize}}</span>  <textarea class="form-control" type="textarea" v-model="object.text" placeholder="INFO"></textarea>  </div>  '}),Vue.component("c-pwd-trap",{props:["object"],template:'  <div class="box bottom-pad">  <strong>Trap: </strong>{{object.text | capitalize}}  </div>  '}),Vue.component("c-pwd-find",{props:["object"],template:'  <div class="box bottom-pad">  <strong>Find: </strong>{{object.text | capitalize}}  </div>  '}),Vue.component("c-pwd-encounter",{props:["object"],template:'  <div class="box bottom-pad">  <div><strong>Encounter: </strong>{{object.name | capitalize}}</div>  <div v-if="object.special.length>0"><strong>Tags:</strong> {{object.special.unique().join(", ") | capitalize}}</div>  </div>  '}),Vue.component("c-pwd-area",{props:["A","i"],template:'  <div class="box center content bottom-pad pwd-area" v-bind:class="{ explored: A.explored }">  <div class="container-fluid">  <div class="row">  <div class="col-xs-6"><strong>Area {{i+1}} ({{txtUnique}})</strong></div>  <div class="col-xs-6"><input type="checkbox" v-model="A.explored" > Explored</div>  </div></div>  <div v-if="A.theme.length>0"><strong>Theme: </strong>{{A.theme | capitalize}}</div>  <component v-for="item in A.special" v-bind:is="pwdComponent(item.class[0])" v-bind:object="item"></component>  <div class="input-group">  <span class="input-group-addon" id="pwd-addon-i">Notes</span>  <textarea class="form-control" type="textarea" v-model="A.notes" placeholder="INFO"></textarea>  </div>  ',data:function(){return{textinputs:["feature","dressing"],encounter:["creature","people","entity"]}},computed:{txtUnique:function(){return this.A.unique?"Unique":"Common"}},methods:{pwdComponent:function(a){return this.textinputs.includes(a)?"c-pwd-textarea":this.encounter.includes(a)?"c-pwd-encounter":"c-pwd-"+a}}}),Vue.component("c-pwd",{template:'<div><h2 class="center">Perilous Wilds Dungeon Generator</h2><c-menubar id="PWD" v-bind:show="showmenu"></c-menubar><c-loadselect id="PWD" v-bind:list="allgens" v-bind:show="showlist.load"></c-loadselect><div class="content"><input class="form-control input-lg center" type="text" v-model="dungeon.name" v-on:input="onInput($event,`name`)" placeholder="NAME"><textarea class="form-control" type="textarea" v-model="dungeon.notes" v-on:input="onInput($event,`notes`)" placeholder="ADD NOTES"></textarea></div><h4 class="center bar-bottom">Themes</h4><div class="box center content bottom-pad" v-for="theme in dungeon.themes" track-by="$index">{{theme | capitalize}}</div><h4 class="center bar-bottom">Areas</h4><c-pwd-area v-for="area in dungeon.areas" v-bind:A="area" v-bind:i="$index"></c-pwd-area></div>',data:function(){return{vid:"PWD",showmenu:{new:!0,load:!0,save:!0,close:!0},showlist:{load:!1},dungeon:{},seed:"",loadgen:"",allgens:{}}},created:function(){CPX.vue.page.onCreated(this)},beforeDestroy:function(){CPX.vue.page.onBeforeDestroy(this)},methods:{save:function(){CPXSAVE.setItem(this.dungeon._id,this.dungeon).then(function(){}),objExists(this.allgens[this.dungeon._id])||Vue.set(this.allgens,this.dungeon._id,this.dungeon.name)},load:function(a){this.dungeon=a},new:function(){CPX.vue.page.newGen(this)},generate:function(){this.dungeon=CPX.PWD.generate(this.seed)},onInput:function(a,b){this.dungeon[b]=a.target.value},close:function(){CPX.vue.page.close(),this.seed="",this.dungeon={},this.allgens=[]}}});var SAG={trigger:["accusation","ambush","apparition","attack","conversation","destruction of object","diary","drawing","dream","encounter w/ NPC","escape","manuscript","map","message","item, exotic","item, mundane","oracle","plea","prophecy","public notice","reconnaissance","request","summoned by group","survivor","symbol","teleportation","transaction","trap","vision","warning"],goal:["aid other hero(es)","break curse affecting persons(s)","break curse affecting location","capture fugitive","deal with growing threat","defend location","deliver message/object","discover secret","escort/protect object(s)/person(s)","investigate location","locate/track down NPC (ally/hero/villain)","maintain peace","prevent invasion","rally ally(allies)/form allegiance(s)","reclaim lost location (regain control of)","release person/creature from burden","rescue/free captive(s)/slave","root out spies/minions of evil","search for knowledge/evidence","solve mystery - disappearance of object","solve mystery - disappearance of person(s)","solve mystery - murder/death","solve mystery - theft","solve mystery - phenomenon","stop conflict","stop impending devastation","stop plot from coming to fruition","stop raids on location","stop strange phenomenon affecting location","stop villain from amassing power"],obstacle:["acquire item","acquire knowledge","acquire key(s)/parts","awaken sleeping NPC","beat time limitation","clear name(s)/restore honor","compete in tournament","complete scavenger hunt","destroy item","escape location","explore location","find hidden/lost entrance","find hidden/lost location","find magic item/object","find way back to key location","fight for freedom","fix “broken” item","make long journey","make perilous journey","navigate labyrinth","navigate series of portals","pass series of tests","perform ritual","restore condition","race against antagonist(s)","reveal conspiracy","revive deceased NPC","solve puzzle/riddles","speak incantation","stop ritual"],location:["abbey","burial ground","catacombs","castle","cave/cavern","cemetery","chasm","citadel/keep","city","dungeon","farmstead","fortress","forest","hamlet","hill","island","mansion","mountain","outpost","palace","ruins","stronghold","temple","thorpe","tomb","tower","town","undercity","village","volcano"],feature:["altar","barracks","bridge","chapel","dais","door","fountain","garden","gallery","gate","plaza","laboratory","library","machine, clockwork","machine, magical","painting","pedestal","pit","pool","portal","sanctuary","sarcophagus","statue/idol","shrine","statuary","tapestry","throne","waterfall","well","workshop"],phenomena:["charm","darkness","decay","delusion","disease","disembodied voices","energy drain (hp)","energy drain (level)","fear","fever","fog/mist","fungi/mold/slime","hallucinations","hauntings","lights/colors","loss of memory","mania","monster plague","nightmares","noises/sounds","panic/paranoia","paralyzation","poisoning(s)","shadows","sickness","sightings of dead","sleep","strange vegetation","strange weather","transformation"],vreason:["amusement/boredom","avoid loss/pain","corruption","debt owed","derangement/insanity","destiny","domination/control","eliminate species","enslavement","envy","experimentation","fear","forgotten reason","guilt","greed","hatred","honor","immortality","ideology (strange)","loyalty (misplaced)","mass destruction","mischief","noble goal, extreme measures","power","pride/vanity","pure evil","revenge","self-preservation/survival","serves higher “boss”","utopia (at all costs)"],artifact:["amulet","bowl/brazier/censer","box","bracers","candle","codex/manual/tome","cube","cup","figurine/idol","flask","gem/jewel","grimoire","horn/instrument","mask","medallion","mirror","necklace","orb/sphere","pearl","potion","ring","rod","scarab","scepter","spellbook","staff","stone","talisman","wand","weapon"],theme:["blood","darkness/night","death","destiny","doom","freedom","forbidden","enchantment","evil","flame(s)","glory","gold","greed","innocence","immortality","judgement","justice","life","light/day","madness","mystery","power","rebirth","revenge","shadow","terror","treasure","vengeance","wonder","wrath"],NPC:["cleric","druid/cleric","fighter","paladin/fighter","ranger/dwarf","magic-user","illusionist/magic-user","thief","assassin/halfling","monk/elf","animal trainer","hermit","merchant","misc. NPC","pilgrim","sage","scribe","spy","smith","tradesman","king","queen","queen mother","noble","noble household","noble teacher","castle employee","soldier","slave","peasant"]};SAG.adventure=function(a){var b={seed:a.seed};b._id=b.seed.join(""),b.RNG=new Chance(b._id);var c=["theme","trigger","goal","obstacle","location","feature","phenomena","artifact","vreason","NPC"];return c.forEach(function(a){b[a]=b.RNG.pickone(SAG[a])}),b.RNG=null,delete b.RNG,b},Vue.component("c-fpg-SAG",{props:["A","idx"],template:'  <div class="content-minor">    <input class="form-control input-lg center" type="text" v-model="A.name" placeholder="NAME">    <textarea class="form-control" type="textarea" v-model="A.notes" placeholder="ADD NOTES"></textarea>    <div class="input-group ">      <span class="input-group-addon strong">Villain Reason</span>      <input class="center form-control" type="text" v-model="A.vreason">    </div>    <div v-for="key in keys" class="input-group ">      <span class="input-group-addon strong">{{key | capitalize}}</span>      <input class="center form-control" type="text" v-model="A[key]">    </div>  </div>  ',data:function(){return{keys:["theme","trigger","goal","obstacle","location","feature","phenomena","artifact","NPC"]}}}),SPECTRAL=["OBFKKMMMM","AFGKMMMMM","FGGKMMMMM","GGGKMMMMM","KKKKMMMMM","KMMMMMMMM","MMMMMMMMC","MMMMMMMST","MMMMMMCLY"],HABSTARS=[["A","F","G","H"],[1,4,7,1]],NSTARS=[1,1,1,1,2,2,2,2,3],STARPROB={cluster:[.081,.35],inner:[.0013,.197],basic:[.0051,.195],voids:[0,.189]},STARS={Habitable:"AFFFFGGGGGGGH",Major:"AFFGGGGHHHHHHHHHJJJJJ",Minor:"MMMMMMMMML",O:{nP:-6},B:{nP:-4},A:[[1.5,3.7,9,36],"White",259.3,"white"],F:[[.6,1.5,3.8,16],"Yellow White",310,"white"],G:[[.35,.8,2.5,10],"Yellow",386.5,"yellow"],H:[[.1,.25,.65,4],"Orange",438.3,"orange"],J:[[0,0,.01,.05],"White Dwarf",374,"white"],L:[[0,0,.01,.05],"Brown Dwarf",1550,"brown"],M:[[0,0,.01,.05],"Red Dwarf",820,"red"],S:{nP:-4}},JOVIAN={Supertorrid:[[27,46,49,52,61,62,92],["SP","TP","HP","VP","AB","SJ","JJ","TJ"]],Torrid:[[27,46,49,50,59,62,92],["SP","TP","HP","VP","AB","SJ","JJ","TJ"]],Temperate:[[27,32,46,49,52,53,62,92],["SP","TP","NP","HP","AP","VP","AB","JJ","TJ"]],Frigid:[[32,41,59,92],["GP","AB","SJ","JJ","TJ"]]},NONJOVIAN={Temperate:["SP","SP","SP","TP","TP","HP","VP","VP","AB","AB"],Frigid:["GP","GP","GP","GP","GP","AB","AB","SJ","SJ","SJ"]},PLANETS={SP:{name:"Selenian",mass:[.01,.03,.1],d:[[2800,4400,6400],["1d4","1d6","1d8"],400]},TP:{name:"Terran",mass:[.3,1],d:[[9600,12e3],["1d6","1d8"],400]},HP:{name:"Hadean",mass:[3],d:[[15200],["1d20"],400]},VP:{name:"Vestan",mass:[10],d:[[23200],["1d6"],400]},NP:{name:"Nerean",mass:[.3,1,1],d:[[9600,12e3],["1d6","1d8"],400]},AP:{name:"Aquarian",mass:[3],d:[[18400],["1d12"],800]},GP:{name:"Glacian",mass:[.01,.01,.01,.03,.03,.1,.1,.3],d:[[2800,5200,6800,10400],["1d6","1d4","1d10","1d8"],400]},AB:{name:"Asteroid Belt",mass:[.01,.01,.01,.03,.03,.1]},SJ:{name:"Subjovian",mass:[[.03,.1],[1,1]],d:[[27500,78e3],["1d20","1d20"],2250]},JJ:{name:"Jovian",mass:[[.3,1,3],[3,3,2]],d:[[12e4,138e3],["2d6-2","1d1"],2e3]},TJ:{name:"Transjovian",mass:[[10],[1]],d:[[14e4],["1d1"],0]}},CPX.data.troubleCategories=["disorder","revolt","poverty","education","despair","corruption"],CPX.data.tdisorder=[{id:"raiders",
cat:"disorder",text:"Raiders routinely harrass the populace."},{id:"monsters",cat:"disorder",text:"Monsters lurk in the wilds."},{id:"wildlife",cat:"disorder",text:"The beasts of the regions have no fear."},{id:"gangs",cat:"disorder",text:"Gang violence can't be stopped, and innocents are being hurt."},{id:"thugs",cat:"disorder",text:"Gangs of thugs are making it hard to do honest beisness."},{id:"lurking outsiders",cat:"disorder",text:"Something is lurking in the town, and the people are restless."},{id:"cult",cat:"disorder",text:"A cult has risen in power.  Their god and their worship is unsetteling the people, but they're afraid to act."}],CPX.data.trevolt=[{id:"dark wizard",cat:"uprising",text:"A wizard in the area is practicing dark arts and plaguing the people."},{id:"exiled lord",cat:"uprising",text:"A warlord and his force are approaching. If they don't surrender, the warlord will burn the town to the ground."},{id:"outsiders",cat:"uprising",text:"Beings from beyond are lurking in the wilds and preying upon the people."}],CPX.data.tpoverty=[{id:"barren",cat:"poverty",text:"Times are hard, and the land is not yeilding what it used to."},{id:"contaminated land",cat:"poverty",text:"The land has been tainted by strange power."},{id:"extreme poverty",cat:"poverty",text:"Continued hardships have reduced the people to poverty. THere's nothing here help them recover."},{id:"inaccessible",cat:"poverty",text:"The town is simply hard to reach - you're amazed you found it.  They need help taiming the wilds and developing roads."},{id:"famine",cat:"poverty",text:"Droughts have make food scarce and the people are hungry."},{id:"ruination",cat:"poverty",text:"Recent storms have left numerous houses and buildings in ruins."},{id:"undeveloped",cat:"poverty",text:"The area has potential, but it needs a lot of work, and the locals need your help."}],CPX.data.teducation=[{id:"hazardous resource",cat:"education",text:"The resources that the people depend upon are actually hazardous, and the locals are suffering."},{id:"sickness",cat:"education",text:"A plague has settled on the town. People only stay well for a short time before falling ill again."},{id:"toxic process",cat:"education",text:"Some livelihood of the people is actually posioning them."},{id:"wasted effort",cat:"education",text:"They are spending a lot of effort to make very little - there's got to be a better way."}],CPX.data.tdespair=[{id:"class hatred",cat:"despair",text:"Two factions are bitter enemies, and the constant conflicts are tearing the town apart."},{id:"crushed spirits",cat:"despair",text:"The people have suffered hardship for too long. They lack the will to carry on."},{id:"demagogue",cat:"despair",text:"Someone has snared the majority of the people with sweet words and false promises."},{id:"disunity",cat:"despair",text:"Everyone is holding a grudge, no one can agree on anything. And anyone who visists doesn't stay long."}],CPX.data.tcorruption=[{id:"corrupt leaders",cat:"corruption",text:"Corruption is rempant amongst the elite. The people need your help exposing and removing them from power."},{id:"mob",cat:"corruption",text:"Mobs rule the town and the people can't do buisness without answering to them."},{id:"secret society",cat:"corruption",text:"There is a power behind the throne and they don't want to let go of the reigns."}],CPX.AB={},CPX.AB.template={_id:"",seed:[],name:"",notes:"",areas:[{name:"",notes:"",explored:!1}]},Vue.component("c-cab-area",{props:["A","i"],template:'  <div class="box center bottom-pad pwd-area" v-bind:class="{ explored: A.explored }">  <h4 class="header">{{A.name}}<span v-if="A.name.length==0">Area {{i+1}}</span>  <button v-on:click="remove" type="button" class="close"><span aria-hidden="true">&times;</span></button>  </h4>  <input class="form-control input-lg center" type="text" v-model="A.name" placeholder="NAME">  <div class="input-group">  <span class="input-group-addon" id="pwd-addon-i">Notes</span>  <textarea class="form-control" type="textarea" v-model="A.notes" placeholder="INFO"></textarea>  </div>  <div class="center"><input type="checkbox" v-model="A.explored" > Explored</div>  ',methods:{remove:function(){HUB.$emit("CAB-remove",this.i)}}}),Vue.component("c-cab",{template:'<div><h2 class="center">CPX Area Builder</h2><c-menubar id="CAB" v-bind:show="showmenu"></c-menubar><c-loadselect id="CAB" v-bind:list="allgens" v-bind:show="showlist.load"></c-loadselect><div class="content"><input class="form-control input-lg center" type="text" v-model="area.name" placeholder="NAME"><textarea class="form-control" type="textarea" v-model="area.notes" placeholder="ADD NOTES"></textarea></div><h4 class="center bar-bottom">Areas <button v-on:click="addArea" type="button" class="btn btn-sm"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></button></h4><c-cab-area v-for="area in area.areas" v-bind:A="area" v-bind:i="$index"></c-cab-area></div>',data:function(){return{vid:"CAB",showmenu:{new:!0,load:!0,save:!0,close:!0},showlist:{load:!1},area:objCopy(CPX.AB.template),allgens:{}}},created:function(){CPX.vue.page.onCreated(this)},beforeDestroy:function(){CPX.vue.page.onBeforeDestroy(this)},methods:{remove:function(a){this.area.areas.splice(a,1)},addArea:function(){this.area.areas.unshift({name:"",notes:"",explored:!1})},save:function(){CPXSAVE.setItem(this.area._id,this.area).then(function(){}),objExists(this.allgens[this.area._id])||Vue.set(this.allgens,this.area._id,this.area.name)},load:function(a){this.area=a},new:function(){this.area=objCopy(CPX.AB.template),this.generate()},generate:function(){this.area.seed=["CAB","-",CPXC.string({length:21,pool:base62})],this.area._id=this.area.seed.join("")},close:function(){CPX.vue.page.close(),this.area={},this.allgens=[]}}});var CHS={};CHS.DATA={size:[8,16,32,48,64,80,96,112,128,144,160],g:[0,.05,.15,.25,.35,.45,.7,.9,1,1.25,1.4],atm:[[0,"None","0.00","Vacc Suit"],[1,"Trace","0.001 to 0.09","Vacc Suit"],[2,"Very Thin, Tainted","0.1 to 0.42","Respirator, Filter"],[3,"Very Thin","0.1 to 0.42","Respirator"],[4,"Thin, Tainted","0.43 to 0.7","Filter"],[5,"Thin","0.43 to 0.7",""],[6,"Standard","0.71–1.49",""],[7,"Standard, Tainted","0.71–1.49","Filter"],[8,"Dense","1.5 to 2.49",""],[9,"Dense, Tainted","1.5 to 2.49","Filter"],["A","Exotic","Varies","Air Supply"],["B","Corrosive","Varies","Vacc Suit"],["C","Insidious","Varies","Vacc Suit"],["D","Dense, High","2.5+",""],["E","Thin, Low","0.5 or less",""],["F","Unusual","Varies","Varies"]],hydro:[["0%–5%","Desert world"],["6%–15%","Dry world"],["16%–25%","A few small seas."],["26%–35%","Small seas and oceans."],["36%–45%","Wet world"],["46%–55%","Large oceans"],["56%–65%","Large oceans"],["66%–75%","Earth-like world"],["76%–85%","Water world"],["86%–95%","Only a few small islands and archipelagos."],["96–100%","Almost entirely water."]],starport:{X:["None","None","No","None","None"],E:["Frontier","None","No","None","None"],D:["Poor","Unrefined","No","None","Scout"],C:["Routine","Unrefined","No","Can perform reasonable repairs","Scout"],B:["Good","Refined","Yes","Can construct non-starships","Naval, Scout"],A:["Excellent","Refined","Yes","Can construct starships and non-starships","Naval, Scout"]},govt:[[0,"None"],[1,"Company/Corporation"],[2,"Participating Democracy"],[3,"Self-Perpetuating Oligarchy"],[4,"Representative Democracy"],[5,"Feudal Technocracy"],[6,"Captive Government"],[7,"Balkanization"],[8,"Civil Service Bureaucracy"],[9,"Impersonal Bureaucracy"],["A","Charismatic Dictator"],["B","Non-Charismatic Leader"],["C","Charismatic Oligarchy"],["D","Religious Dictatorship"],["E","Religious Autocracy"],["F","Totalitarian Oligarchy"]],law:[[0,"No Law","No restrictions; candidate for Amber Zone status"],[1,"Low Law","Poison gas, explosives, undetectable weapons, weapons or mass destruction"],[2,"Low Law","Portable energy weapons (except ship-mounted weapons)"],[3,"Low Law","Heavy weapons"],[4,"Medium Law","Light assault weapons and submachine guns"],[5,"Medium Law","Personal concealable weapons"],[6,"Medium Law","All firearms except shotguns and stunners; carrying weapons discouraged"],[7,"High Law","Shotguns"],[8,"High Law","All bladed weapons, stunners"],[9,"High Law","Any weapons outside one’s residence; candidate for Amber Zone status"],["A","Extreme Law","Any weapons allowed at all; candidate for Amber Zone status"]],pop:["None","Few","Hundreds","Thousands","Tens of thousands","Hundreds of thousands","Millions","Tens of millions","Hundreds of millions","Billions","Tens of billions"]},CHS.system=function(a){var b={seed:a},c=0,d=0;b._id=a.join(""),b.RNG=new Chance(b._id),b.name=CPXC.capitalize(b.RNG.word()),b.stars=[b.RNG.weighted(HABSTARS[0],HABSTARS[1])];var e=[STARS[b.stars[0]][0][1],STARS[b.stars[0]][0][2]];if(b.planets=[],d=0,b.RNG.diceSum("2d6")>4){d=b.RNG.d6()-2,d<1&&(d=1);for(var f=0;f<d;f++)b.planets.push({class:["planet","gasgiant"]})}if(c=b.planets.length>0?b.RNG.diceSum("2d6"):b.RNG.diceSum("3d6"),d=0,b.RNG.diceSum("2d6")>3){d=b.RNG.d6()-3,d<1&&(d=1);for(var f=0;f<d;f++)b.planets.push({class:["belt"]})}for(var f=b.planets.length;f<c;f++)b.planets.push({class:["planet","terran"]});b.planets=b.RNG.shuffle(b.planets),b.HZone=[],val=0,b.orbits=[(b.RNG.d4()+1)/10],b.orbits[1]=b.orbits[0]+.3;for(var f=2;f<c;f++)val=Math.round10(b.orbits[0]+.3*Math.pow(2,f-1),-1),b.orbits[f]=val,val>=e[0]&&val<=e[1]&&b.HZone.push(f);return b.HZone.length>0?b.planets[b.RNG.pickone(b.HZone)]={class:["planet","terran"]}:(b.planets.push({class:["planet","terran"]}),val=e[0]+(e[1]-e[0])*b.RNG.d20()/20,b.orbits.push(val),b.HZone.push(b.orbits.length-1)),b.RNG=null,delete b.RNG,b.planets.forEach(function(a,c){CHS.planet(b,c)}),b},CHS.planet=function(a,b){var c=a.planets[b];c.RNG=new Chance(a._id+"-"+b),"terran"==c.class[1]?a.HZone.includes(b)?CHS.main(c.RNG,c):CHS.terran(c.RNG,c):"gasgiant"==c.class[1]&&CHS.gasGiant(c.RNG,c),c.RNG=null,delete c.RNG},CHS.gasGiant=function(a,b){b.class.push(b.RNG.weighted(["SJ","JJ","TJ"],[3,6,1])),b.mass=a.weighted(PLANETS[b.class[2]].mass[0],PLANETS[b.class[2]].mass[1])},CHS.terran=function(a,b){b.size=a.diceSum("2d6")-2,b.size>0?b.atm=a.diceSum("2d6")-7+b.size:b.atm=0,b.atm<0&&(b.atm=0)},CHS.main=function(a,b){b.class.push("main"),b.size=a.diceSum("2d6")-2,b.size>0?b.atm=a.diceSum("2d6")-7+b.size:b.atm=0,b.atm<0&&(b.atm=0),b.hydro=a.diceSum("2d6")-7+b.size,[0,1,10,11,12].includes(b.atm)?b.hydro-=4:14==b.atm&&(b.hydro-=2),b.size<2&&(b.hydro=0),b.hydro<0&&(b.hydro=0),b.pop=a.diceSum("2d6")-2,b.size<3&&(b.pop-=1),b.atm<4&&0===b.hydro&&(b.pop-=2),b.atm>9?b.pop-=2:6==b.atm?b.pop+=3:[5,8].includes(b.atm)&&(b.pop+=1),b.pop>10&&(b.pop=10),b.pop<1&&(b.pop=1),b.starport=a.diceSum("2d6")-7+b.pop,b.starport<3?b.starport="X":b.starport<5?b.starport="E":b.starport<7?b.starport="D":b.starport<9?b.starport="C":b.starport<11?b.starport="B":b.starport="A",b.gov=a.diceSum("2d6")-7+b.pop,b.gov<0&&(b.gov=0),b.law=a.diceSum("2d6")-7+b.pop,b.law>10&&(b.law=10),b.law<0&&(b.law=0),b.TL=a.d6();var c={A:6,B:4,C:2,D:0,E:0,X:-4};b.TL+=c[b.starport],b.size<2?b.TL+=2:b.size<5&&(b.TL+=1),[0,1,2,3,10,11,12,13,14,15].includes(b.atm)&&(b.TL+=1),[0,9].includes(b.hydro)?b.TL+=1:10==b.hydro&&(b.TL+=2),[2,3,4,5,6,7].includes(b.pop)?b.TL+=1:8==b.pop?b.TL+=2:9==b.pop?b.TL+=3:10==b.pop&&(b.TL+=4),[0,5].includes(b.gov)?b.TL+=1:[13,14].includes(b.gov)?b.TL-=2:7==b.gov&&(b.TL+=2)},Vue.component("c-chs-star",{props:["S","i"],template:'<div class="header strong">{{head | capitalize}} Main Sequence</div>',computed:{head:function(){return STARS[this.S][1]}}}),Vue.component("c-chs-planet",{props:["P","i","O","HZ"],template:'  <div class="header strong">{{head | capitalize}} ({{O[i]}} AU)   <div class="pull-right" v-if="HZ.includes(i)">[HabZone]</div></div>  <div v-if="P.class.includes(`main`)" class="bottom-pad"><input class="form-control center" type="text" v-model="P.name" placeholder="NAME"></div>  <div v-if="P.class[1] == `terran`">  <div class="center"><strong>Diameter:</strong> {{D.size[P.size]*100}} km   ({{Math.round10(D.size[P.size]*100/12742,-2)}} earth) <strong>Gravity:</strong> {{D.g[P.size]}}g</div>  <div class="center"><strong>Atmosphere:</strong> {{D.atm[P.atm][1]}}</div>  <div v-if="main">  <div class="center"><strong>Hydrosphere:</strong> {{D.hydro[P.hydro][1]}} ({{D.hydro[P.hydro][0]}} water)</div>  <div class="content">  <div><strong>Population:</strong> {{D.pop[P.pop]}} [<strong>Tech:</strong> {{P.TL}}]</div>  <div><strong>Starport:</strong> {{D.starport[P.starport][1]}}</div>  <div><strong>Government:</strong> {{D.govt[P.gov][1]}}</div>  <div><strong>Law:</strong> {{D.law[P.law][1]}}</div>  </div></div></div>  ',data:function(){return{D:CHS.DATA}},computed:{main:function(){return!!this.P.class.includes("main")},head:function(){return"planet"==this.P.class[0]?"gasgiant"==this.P.class[1]?PLANETS[this.P.class[2]].name+" ["+this.P.mass+"x Juptier]":this.P.class[1]:this.P.class[0]}}}),Vue.component("c-chs",{template:'<div><h2 class="center">Traveller RPG System Generator</h2><c-menubar id="CHS" v-bind:show="showmenu"></c-menubar><c-loadselect id="CHS" v-bind:list="allgens" v-bind:show="showlist.load"></c-loadselect><div class="content"><input class="form-control input-lg center" type="text" v-model="system.name" placeholder="NAME"><textarea class="form-control" type="textarea" v-model="system.notes" placeholder="ADD NOTES"></textarea></div><h4 class="center bar-bottom">Stars</h4><c-chs-star v-for="s in system.stars" v-bind:S="s" v-bind:i="$index"></c-chs-star><h4 class="center bar-bottom">Planet</h4><c-chs-planet v-for="p in system.planets" v-bind:HZ="system.HZone" v-bind:P="p" v-bind:i="$index" v-bind:O="system.orbits"></c-chs-planet></div>',data:function(){return{vid:"CHS",showmenu:{new:!0,load:!0,save:!0,close:!0},showlist:{load:!1},system:{},loadgen:"",allgens:{}}},created:function(){CPX.vue.page.onCreated(this)},beforeDestroy:function(){CPX.vue.page.onBeforeDestroy(this)},methods:{save:function(){CPXSAVE.setItem(this.system._id,this.system).then(function(){}),objExists(this.allgens[this.system._id])||Vue.set(this.allgens,this.system._id,this.system.name)},load:function(a){this.system=a},new:function(){this.system={},this.generate()},generate:function(){this.system=CHS.system(["CHS","-",CPXC.string({length:27,pool:base62})])},close:function(){CPX.vue.page.close(),this.system={},this.allgens=[]}}}),CPX.data.cityExtras=["school","barracks","fortified","market","militia","temple","guild","resource"],CPX.city=function(a){var b={seed:a.seed,size:a.size,class:["city"],name:"undefined"==typeof a.name?"":a.name,notes:"undefined"==typeof a.notes?"":a.notes,people:"undefined"==typeof a.people?[]:a.people,terrain:"undefined"==typeof a.terrain?[]:a.terrain};b._id=b.seed.join(""),b.RNG=new Chance(b._id);var c=b.RNG.weighted(["aspect","magic","element"],[2,1,1]);if(b.aspect=CPX.creature.special(b.RNG,c),0==b.people.length)for(var d=b.RNG.weighted([1,2,3],[7,2.5,.5]),e=0;e<d;e++)b.people.push(CPX.people(b.RNG,{terrain:a.terrain}));var f=b.RNG.weighted([1,2,3],[7,2.5,.5]);b.extras=[];for(var e=0;e<f;e++)b.extras.push(b.RNG.pickone(CPX.data.cityExtras));var g=b.RNG.pickone(CPX.data.troubleCategories);return b.trouble=b.RNG.pickone(CPX.data["t"+g]).id,b.RNG=null,delete b.RNG,b},Vue.component("c-cfp-CPC",{props:["obj"],template:'<div class="content"><input class="form-control input-lg center" type="text" v-model="obj.name" placeholder="NAME"><textarea class="form-control" type="textarea" v-model="obj.notes" placeholder="ADD NOTES"></textarea><div class="content-minor box"><div class="header strong center">Population</div><c-cfp-ppl v-for="ppl in obj.people" v-bind:P="ppl"></c-cfp-ppl></div><div class="input-group"><span class="input-group-addon strong">Aspect</span><input class="form-control center" type="text" v-model="obj.aspect"></div><div class="input-group" v-for="e in obj.extras"><span class="input-group-addon strong">Extra</span><input class="form-control center" type="text" v-model="e"></div><div class="input-group"><span class="input-group-addon strong">Trouble</span><select class="form-control" v-model="obj.trouble"><option  v-for="t in trouble" v-bind:value="t.id">{{t.id | capitalize}}</option></select></div><div class="center bottom-pad">{{tinfo(obj.trouble)}}</div></div>',computed:{trouble:function(){var a=[];return CPX.data.troubleCategories.forEach(function(b){a=a.concat(CPX.data["t"+b])}),a}},methods:{tinfo:function(a){return this.trouble.find(function(b){return b.id==a}).text}}}),start(initialize);